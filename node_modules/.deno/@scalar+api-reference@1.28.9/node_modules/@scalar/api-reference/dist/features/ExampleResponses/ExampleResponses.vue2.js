import { defineComponent as M, useId as N, ref as S, computed as d, openBlock as o, createBlock as t, unref as l, withCtx as u, createVNode as v, createElementBlock as x, createCommentVNode as f, createTextVNode as E, withDirectives as F, createElementVNode as R, vModelCheckbox as I, Fragment as T, renderList as O, toDisplayString as A } from "vue";
import { ScalarIcon as D, ScalarCodeBlock as P, ScalarMarkdown as U } from "@scalar/components";
import { normalizeMimeTypeObject as H } from "@scalar/oas-utils/helpers";
import { useClipboard as J } from "@scalar/use-hooks/useClipboard";
import K from "../../components/ScreenReader.vue.js";
import V from "./ExampleResponse.vue.js";
import L from "../../components/Card/Card.vue.js";
import W from "../../components/Card/CardTabHeader.vue.js";
import q from "../../components/Card/CardTab.vue.js";
import G from "../../components/Card/CardContent.vue.js";
import Q from "../../components/Card/CardFooter.vue.js";
import X from "../ExampleRequest/ExamplePicker.vue.js";
const Y = {
  key: 1,
  class: "scalar-card-checkbox"
}, Z = ["aria-controls"], $ = { class: "scalar-card-container custom-scroll" }, z = {
  key: 1,
  class: "response-description"
}, me = /* @__PURE__ */ M({
  __name: "ExampleResponses",
  props: {
    responses: {}
  },
  setup(g) {
    const c = N(), { copyToClipboard: _ } = J(), p = S(), b = d(() => Object.keys(g.responses ?? {}).sort()), k = d(
      () => !!s.value.examples
    ), C = S(0), i = d(() => {
      var a;
      const e = b.value[C.value];
      return (a = g.responses) == null ? void 0 : a[e];
    }), s = d(() => {
      var a;
      const e = H(
        (a = i.value) == null ? void 0 : a.content
      );
      return (
        // OpenAPI 3.x
        (e == null ? void 0 : e["application/json"]) ?? (e == null ? void 0 : e["application/xml"]) ?? (e == null ? void 0 : e["text/plain"]) ?? (e == null ? void 0 : e["text/html"]) ?? (e == null ? void 0 : e["*/*"]) ?? // Swagger 2.0
        i.value
      );
    }), j = () => {
      if (!k.value)
        return s.value.example;
      if (Array.isArray(s.value.examples))
        return s.value.examples[0];
      const e = Object.keys(s.value.examples)[0];
      return s.value.examples[e];
    }, y = d(() => ({
      ...s.value,
      example: k.value && p.value ? s.value.examples[p.value].value ?? s.value.examples[p.value] : j()
    })), B = (e) => {
      C.value = e, p.value = void 0;
    }, h = S(!1);
    return (e, a) => b.value.length ? (o(), t(l(L), {
      key: 0,
      "aria-label": "Example Responses",
      role: "region"
    }, {
      default: u(() => {
        var w;
        return [
          v(l(W), {
            muted: "",
            x: "as",
            onChange: B
          }, {
            actions: u(() => {
              var r, m;
              return [
                (r = s.value) != null && r.example ? (o(), x("button", {
                  key: 0,
                  class: "code-copy",
                  type: "button",
                  onClick: a[0] || (a[0] = () => {
                    var n;
                    return l(_)((n = s.value) == null ? void 0 : n.example);
                  })
                }, [
                  v(l(D), {
                    icon: "Clipboard",
                    width: "12px"
                  })
                ])) : f("", !0),
                (m = s.value) != null && m.schema ? (o(), x("label", Y, [
                  a[4] || (a[4] = E(" Show Schema ")),
                  F(R("input", {
                    "onUpdate:modelValue": a[1] || (a[1] = (n) => h.value = n),
                    "aria-controls": l(c),
                    class: "scalar-card-checkbox-input",
                    type: "checkbox"
                  }, null, 8, Z), [
                    [I, h.value]
                  ]),
                  a[5] || (a[5] = R("span", { class: "scalar-card-checkbox-checkmark" }, null, -1))
                ])) : f("", !0)
              ];
            }),
            default: u(() => [
              (o(!0), x(T, null, O(b.value, (r) => (o(), t(l(q), {
                key: r,
                "aria-controls": l(c)
              }, {
                default: u(() => [
                  v(K, null, {
                    default: u(() => a[3] || (a[3] = [
                      E("Status:")
                    ])),
                    _: 1
                  }),
                  E(" " + A(r), 1)
                ]),
                _: 2
              }, 1032, ["aria-controls"]))), 128))
            ]),
            _: 1
          }),
          R("div", $, [
            v(l(G), { muted: "" }, {
              default: u(() => {
                var r;
                return [
                  (r = s.value) != null && r.schema ? (o(), x(T, { key: 0 }, [
                    h.value && y.value ? (o(), t(l(P), {
                      key: 0,
                      id: l(c),
                      class: "-outline-offset-2",
                      content: y.value,
                      lang: "json"
                    }, null, 8, ["id", "content"])) : (o(), t(V, {
                      key: 1,
                      id: l(c),
                      response: y.value
                    }, null, 8, ["id", "response"]))
                  ], 64)) : (o(), t(V, {
                    key: 1,
                    id: l(c),
                    response: y.value
                  }, null, 8, ["id", "response"]))
                ];
              }),
              _: 1
            })
          ]),
          (w = i.value) != null && w.description || k.value ? (o(), t(l(Q), {
            key: 0,
            class: "response-card-footer",
            muted: ""
          }, {
            default: u(() => {
              var r, m;
              return [
                k.value ? (o(), t(l(X), {
                  key: 0,
                  class: "response-example-selector",
                  examples: (r = s.value) == null ? void 0 : r.examples,
                  "onUpdate:modelValue": a[2] || (a[2] = (n) => p.value = n)
                }, null, 8, ["examples"])) : (m = i.value) != null && m.description ? (o(), x("div", z, [
                  v(l(U), {
                    class: "markdown",
                    value: i.value.description
                  }, null, 8, ["value"])
                ])) : f("", !0)
              ];
            }),
            _: 1
          })) : f("", !0)
        ];
      }),
      _: 1
    })) : f("", !0);
  }
});
export {
  me as default
};
