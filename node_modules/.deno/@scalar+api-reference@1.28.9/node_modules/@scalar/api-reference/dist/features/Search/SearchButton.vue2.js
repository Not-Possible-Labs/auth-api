import { defineComponent as S, onMounted as f, onBeforeUnmount as k, openBlock as r, createElementBlock as n, Fragment as l, createElementVNode as o, normalizeClass as b, unref as a, createVNode as d, createTextVNode as p, toDisplayString as w } from "vue";
import { useModal as K, ScalarIcon as v } from "@scalar/components";
import C from "./SearchModal.vue.js";
import { isMacOs as c } from "../../helpers/isMacOs.js";
import { useApiClient as B } from "../ApiClientModal/useApiClient.js";
const E = { class: "sidebar-search-input" }, H = { class: "sidebar-search-shortcut" }, M = { class: "sidebar-search-key" }, D = /* @__PURE__ */ S({
  __name: "SearchButton",
  props: {
    spec: {},
    searchHotKey: { default: "k" }
  },
  setup(m) {
    const u = m, t = K(), { client: h } = B(), i = (s) => {
      var e;
      (c() ? s.metaKey : s.ctrlKey) && s.key === u.searchHotKey && !((e = h.value) != null && e.modalState.open) && (s.preventDefault(), s.stopPropagation(), t.open ? t.hide() : t.show());
    };
    return f(() => window.addEventListener("keydown", i)), k(() => window.removeEventListener("keydown", i)), (s, e) => (r(), n(l, null, [
      o("button", {
        class: b(["sidebar-search", s.$attrs.class]),
        role: "search",
        type: "button",
        onClick: e[0] || (e[0] = //@ts-ignore
        (...y) => a(t).show && a(t).show(...y))
      }, [
        d(a(v), {
          class: "scalar-search-icon",
          icon: "Search",
          size: "sm",
          thickness: "2.5"
        }),
        o("div", E, [
          e[4] || (e[4] = o("span", { class: "sr-only" }, "Open Search", -1)),
          e[5] || (e[5] = o("span", {
            "aria-hidden": "true",
            class: "sidebar-search-placeholder"
          }, " Search ", -1)),
          o("span", H, [
            e[3] || (e[3] = o("span", { class: "sr-only" }, "Keyboard Shortcut:", -1)),
            o("kbd", M, [
              a(c)() ? (r(), n(l, { key: 0 }, [
                p("⌘")
              ], 64)) : (r(), n(l, { key: 1 }, [
                e[1] || (e[1] = o("span", { class: "sr-only" }, "CTRL", -1)),
                e[2] || (e[2] = o("span", { "aria-hidden": "true" }, "⌃", -1))
              ], 64)),
              p(" " + w(s.searchHotKey), 1)
            ])
          ])
        ])
      ], 2),
      d(C, {
        modalState: a(t),
        parsedSpec: s.spec
      }, null, 8, ["modalState", "parsedSpec"])
    ], 64));
  }
});
export {
  D as default
};
