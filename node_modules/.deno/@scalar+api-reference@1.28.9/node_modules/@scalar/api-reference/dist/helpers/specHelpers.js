function u(e, r) {
  var s;
  let t = e;
  const i = (s = r.required) == null ? void 0 : s.includes(e);
  return t += i ? " REQUIRED " : " optional ", r.properties[e] && (t += r.properties[e].type, r.properties[e].description && (t += " " + r.properties[e].description)), t;
}
function f(e) {
  var i;
  const r = ["Body"], t = (i = e == null ? void 0 : e.schema) == null ? void 0 : i.properties;
  return t && Object.keys(t).forEach((s) => {
    if (!e.schema)
      return;
    r.push(u(s, e.schema));
    const p = t[s];
    p.type === "object" && !!p.properties && p.properties && Object.keys(p.properties).forEach((o) => {
      var c, n;
      r.push(`${o} ${(n = (c = p.properties) == null ? void 0 : c[o]) == null ? void 0 : n.type}`);
    });
  }), r;
}
function a(e) {
  var r, t, i;
  try {
    const s = (i = (t = (r = e == null ? void 0 : e.information) == null ? void 0 : r.requestBody) == null ? void 0 : t.content) == null ? void 0 : i["application/json"];
    if (!s)
      throw new Error("Body not found");
    return f(s);
  } catch {
    return !1;
  }
}
export {
  a as extractRequestBody,
  u as formatProperty,
  f as recursiveLogger
};
