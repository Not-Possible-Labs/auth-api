import { defineComponent as ie, computed as g, ref as $, onBeforeMount as A, onMounted as le, onUnmounted as de, watch as R, onServerPrefetch as ue, useSSRContext as ce, useId as pe, provide as w, openBlock as y, createElementBlock as C, Fragment as H, createElementVNode as d, normalizeClass as fe, unref as i, normalizeStyle as me, renderSlot as u, normalizeProps as c, guardReactiveProps as p, createVNode as m, withCtx as v, createCommentVNode as E, withDirectives as ve, vShow as Se, createSlots as he } from "vue";
import { provideUseId as ge } from "@headlessui/vue";
import { LAYOUT_SYMBOL as be } from "@scalar/api-client/hooks";
import { createWorkspaceStore as we, WORKSPACE_SYMBOL as ye, createActiveEntitiesStore as Ce, ACTIVE_ENTITIES_SYMBOL as Te } from "@scalar/api-client/store";
import { addScalarClassesToHeadless as $e, ScalarErrorBoundary as Re } from "@scalar/components";
import { defaultStateFactory as D } from "@scalar/oas-utils/helpers";
import { hasObtrusiveScrollbars as Ee, getThemeStyles as Oe } from "@scalar/themes";
import { apiReferenceConfigurationSchema as Ie } from "@scalar/types/api-reference";
import { useToasts as ke, ScalarToasts as Fe } from "@scalar/use-toasts";
import { useMediaQuery as Le, useResizeObserver as Pe, useDebounceFn as Me } from "@vueuse/core";
import Be from "./GettingStarted.vue.js";
import { CONFIGURATION_SYMBOL as Ae } from "../hooks/useConfig.js";
import { useHttpClientStore as He } from "../stores/useHttpClientStore.js";
import { downloadSpecBus as _, downloadSpecFile as De } from "../helpers/specDownloads.js";
import _e from "./Sidebar/Sidebar.vue.js";
import Ne from "./Content/Content.vue.js";
import Ue from "../features/ApiClientModal/ApiClientModal.vue.js";
import { useSidebar as ze } from "../hooks/useSidebar.js";
import { useNavState as Ye } from "../hooks/useNavState.js";
import { sleep as Ve } from "../helpers/sleep.js";
const Ge = ["innerHTML"], We = { class: "references-header" }, je = ["aria-label"], Ke = { class: "references-navigation-list" }, Qe = { class: "references-editor" }, qe = { class: "references-editor-textarea" }, Je = ["aria-label"], Xe = {
  key: 0,
  class: "references-footer"
}, gt = /* @__PURE__ */ ie({
  inheritAttrs: !1,
  __name: "ApiReferenceLayout",
  props: {
    configuration: {},
    parsedSpec: {},
    rawSpec: {}
  },
  emits: ["changeTheme", "updateContent", "loadSwaggerFile", "linkSwaggerFile", "toggleDarkMode"],
  setup(N) {
    const f = N, t = g(
      () => Ie.parse(f.configuration)
    ), { initializeToasts: U, toast: z } = ke();
    U((e) => z(e));
    const Y = Le("(min-width: 1150px)"), V = $("100dvh"), S = $(null);
    Pe(S, (e) => {
      V.value = e[0].contentRect.height + "px";
    });
    const G = g(Ee), {
      breadcrumb: W,
      collapsedSidebarItems: b,
      isSidebarOpen: j,
      setCollapsedSidebarItem: O,
      hideModels: K,
      defaultOpenAllTags: Q,
      setParsedSpec: q,
      scrollToOperation: J
    } = ze(), {
      getReferenceHash: X,
      getPathRoutingId: I,
      getSectionId: Z,
      getTagId: x,
      hash: ee,
      isIntersectionEnabled: k,
      updateHash: F,
      replaceUrlState: te
    } = Ye();
    if (t.value.redirect && typeof window < "u") {
      const e = t.value.redirect(
        (t.value.pathRouting ? window.location.pathname : "") + window.location.hash
      );
      e && history.replaceState({}, "", e);
    }
    A(() => F());
    const L = async (e) => {
      var a;
      k.value = !1, F(), e ? J(e) : (a = S.value) == null || a.scrollTo(0, 0), await Ve(100), k.value = !0;
    }, P = $(0);
    A(() => $e()), le(() => {
      var o, s, r;
      history.scrollRestoration = "manual", _.on(({ specTitle: n }) => {
        De(f.rawSpec, n);
      });
      const e = (s = (o = S.value) == null ? void 0 : o.parentElement) == null ? void 0 : s.getBoundingClientRect(), a = (r = S.value) == null ? void 0 : r.getBoundingClientRect();
      if (e && a) {
        const n = a.top - e.top;
        P.value = n < 2 ? 0 : n;
      }
      window.onhashchange = () => {
        L(X());
      }, window.onpopstate = () => t.value.pathRouting && L(I(window.location.pathname));
    });
    const ae = g(
      () => Y.value || !t.value.isEditable
    ), M = Me((e) => {
      if ((e.target.scrollTop ?? 0) < 50) {
        const o = t.value.pathRouting ? t.value.pathRouting.basePath : window.location.pathname;
        te("", o + window.location.search);
      }
    }), l = g(() => ({
      breadcrumb: W.value,
      spec: f.parsedSpec
    }));
    de(() => {
      _.reset();
    }), R(() => f.parsedSpec, q, { deep: !0 }), ue(() => {
      var a, o;
      const e = ce();
      if (e && (e.payload || (e.payload = { data: D() }), (a = e.payload).data || (a.data = D()), t.value.pathRouting)) {
        const s = I(e.url);
        ee.value = s, e.payload.data.hash = s;
        for (const r in b)
          Object.hasOwn(b, r) && delete b[r];
        if (s)
          O(Z(s), !0);
        else {
          const r = (o = f.parsedSpec.tags) == null ? void 0 : o[0];
          r && O(x(r), !0);
        }
        e.payload.data["useSidebarContent-collapsedSidebarItems"] = b;
      }
    }), ge(() => pe());
    const T = we({
      useLocalStorage: !1,
      ...t.value
    });
    R(
      () => f.rawSpec,
      (e) => {
        var a;
        return e && T.importSpecFile(e, "default", {
          shouldLoad: !1,
          documentUrl: (a = t.value.spec) == null ? void 0 : a.url,
          setCollectionSecurity: !0,
          ...t.value
        });
      },
      { immediate: !0 }
    ), w(ye, T);
    const oe = Ce(T);
    w(Te, oe), w(be, "modal"), w(Ae, t);
    function B(e, a) {
      R(
        () => t.value[e],
        (o) => {
          typeof o < "u" && a(o);
        },
        { immediate: !0 }
      );
    }
    const { setExcludedClients: re, setDefaultHttpClient: se } = He();
    B("defaultHttpClient", se), B("hiddenClients", re), K.value = t.value.hideModels ?? !1, Q.value = t.value.defaultOpenAllTags ?? !1;
    const ne = g(
      () => `<style>
  ${Oe(t.value.theme, {
        fonts: t.value.withDefaultFonts
      })}</style>`
    );
    return (e, a) => {
      var o, s, r;
      return y(), C(H, null, [
        d("div", { innerHTML: ne.value }, null, 8, Ge),
        d("div", {
          ref_key: "documentEl",
          ref: S,
          class: fe(["scalar-app scalar-api-reference references-layout", [
            {
              "scalar-scrollbars-obtrusive": G.value,
              "references-editable": t.value.isEditable,
              "references-sidebar": t.value.showSidebar,
              "references-sidebar-mobile-open": i(j),
              "references-classic": t.value.layout === "classic"
            },
            e.$attrs.class
          ]]),
          style: me({
            "--scalar-y-offset": `var(--scalar-custom-header-height, ${P.value}px)`
          }),
          onScrollPassive: a[4] || (a[4] = //@ts-ignore
          (...n) => i(M) && i(M)(...n))
        }, [
          d("div", We, [
            u(e.$slots, "header", c(p(l.value)), void 0, !0)
          ]),
          t.value.showSidebar ? (y(), C("aside", {
            key: 0,
            "aria-label": `Sidebar for ${(o = e.parsedSpec.info) == null ? void 0 : o.title}`,
            class: "references-navigation t-doc__sidebar"
          }, [
            d("div", Ke, [
              m(i(Re), null, {
                default: v(() => [
                  m(i(_e), {
                    operationsSorter: t.value.operationsSorter,
                    parsedSpec: e.parsedSpec,
                    tagsSorter: t.value.tagsSorter
                  }, {
                    "sidebar-start": v(() => [
                      u(e.$slots, "sidebar-start", c(p(l.value)), void 0, !0)
                    ]),
                    "sidebar-end": v(() => [
                      u(e.$slots, "sidebar-end", c(p(l.value)), void 0, !0)
                    ]),
                    _: 3
                  }, 8, ["operationsSorter", "parsedSpec", "tagsSorter"])
                ]),
                _: 3
              })
            ])
          ], 8, je)) : E("", !0),
          ve(d("div", Qe, [
            d("div", qe, [
              u(e.$slots, "editor", c(p(l.value)), void 0, !0)
            ])
          ], 512), [
            [Se, t.value.isEditable]
          ]),
          ae.value ? (y(), C(H, { key: 1 }, [
            d("main", {
              "aria-label": `Open API Documentation for ${(s = e.parsedSpec.info) == null ? void 0 : s.title}`,
              class: "references-rendered"
            }, [
              m(i(Ne), {
                layout: t.value.layout,
                parsedSpec: e.parsedSpec
              }, he({
                start: v(() => [
                  u(e.$slots, "content-start", c(p(l.value)), void 0, !0)
                ]),
                end: v(() => [
                  u(e.$slots, "content-end", c(p(l.value)), void 0, !0)
                ]),
                _: 2
              }, [
                (r = t.value) != null && r.isEditable ? {
                  name: "empty-state",
                  fn: v(() => {
                    var n;
                    return [
                      m(Be, {
                        theme: ((n = t.value) == null ? void 0 : n.theme) || "default",
                        onChangeTheme: a[0] || (a[0] = (h) => e.$emit("changeTheme", h)),
                        onLinkSwaggerFile: a[1] || (a[1] = (h) => e.$emit("linkSwaggerFile")),
                        onLoadSwaggerFile: a[2] || (a[2] = (h) => e.$emit("loadSwaggerFile")),
                        onUpdateContent: a[3] || (a[3] = (h) => e.$emit("updateContent", h))
                      }, null, 8, ["theme"])
                    ];
                  }),
                  key: "0"
                } : void 0
              ]), 1032, ["layout", "parsedSpec"])
            ], 8, Je),
            e.$slots.footer ? (y(), C("div", Xe, [
              u(e.$slots, "footer", c(p(l.value)), void 0, !0)
            ])) : E("", !0)
          ], 64)) : E("", !0),
          m(i(Ue), { configuration: t.value }, null, 8, ["configuration"])
        ], 38),
        m(i(Fe))
      ], 64);
    };
  }
});
export {
  gt as default
};
