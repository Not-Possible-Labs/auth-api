import { defineComponent as i, openBlock as n, createBlock as c, unref as e, withCtx as t, createVNode as a, createTextVNode as l, toDisplayString as d, renderSlot as s } from "vue";
import { ScalarMarkdown as m } from "@scalar/components";
import p from "../../Section/SectionContainerAccordion.vue.js";
import f from "../../Section/SectionHeader.vue.js";
import u from "../../Anchor/Anchor.vue.js";
import g from "../../Section/SectionHeaderTag.vue.js";
import { useNavState as _ } from "../../../hooks/useNavState.js";
const B = /* @__PURE__ */ i({
  __name: "TagAccordion",
  props: {
    tag: {}
  },
  setup(S) {
    const { getTagId: r } = _();
    return (o, v) => (n(), c(e(p), { class: "tag-section" }, {
      title: t(() => [
        a(e(f), { class: "tag-name" }, {
          default: t(() => [
            a(e(u), {
              id: e(r)(o.tag)
            }, {
              default: t(() => [
                a(e(g), { level: 2 }, {
                  default: t(() => [
                    l(d(o.tag.name), 1)
                  ]),
                  _: 1
                })
              ]),
              _: 1
            }, 8, ["id"])
          ]),
          _: 1
        }),
        a(e(m), {
          class: "tag-description",
          value: o.tag.description,
          withImages: ""
        }, null, 8, ["value"])
      ]),
      default: t(() => [
        s(o.$slots, "default", {}, void 0, !0)
      ]),
      _: 3
    }));
  }
});
export {
  B as default
};
