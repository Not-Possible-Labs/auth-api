import { defineComponent as y, openBlock as t, createElementBlock as a, createElementVNode as l, Fragment as n, createTextVNode as o, createCommentVNode as r, toDisplayString as p } from "vue";
const s = {
  key: 0,
  class: "schema-type"
}, u = ["title"], v = /* @__PURE__ */ y({
  __name: "SchemaHeading",
  props: {
    value: { type: [Object, Boolean] },
    name: {}
  },
  setup(m) {
    return (e, i) => typeof e.value == "object" ? (t(), a("span", s, [
      l("span", {
        class: "schema-type-icon",
        title: typeof e.value.type == "string" ? e.value.type : Array.isArray(e.value.type) ? e.value.type.join(" | ") : "unkown type"
      }, [
        e.value.type === "object" ? (t(), a(n, { key: 0 }, [
          o(" {} ")
        ], 64)) : r("", !0),
        e.value.type === "array" ? (t(), a(n, { key: 1 }, [
          o(" [] ")
        ], 64)) : r("", !0),
        e.value.enum ? (t(), a(n, { key: 2 }, [
          o(" enum ")
        ], 64)) : r("", !0)
      ], 8, u),
      e.name ? (t(), a(n, { key: 0 }, [
        o(p(e.name), 1)
      ], 64)) : (t(), a(n, { key: 1 }, [
        o(p(e.value.type), 1)
      ], 64))
    ])) : r("", !0);
  }
});
export {
  v as default
};
