import { defineComponent as u, toRef as p, ref as n, provide as d, openBlock as _, createBlock as h, unref as e, withCtx as g, createVNode as x, isRef as V } from "vue";
import b from "./SingleApiReference.vue.js";
/* empty css                        */
import { useMultipleDocuments as v } from "../hooks/useMultipleDocuments.js";
import { NAV_STATE_SYMBOL as A } from "../hooks/useNavState.js";
import B from "./DocumentSelector/DocumentSelector.vue.js";
const N = /* @__PURE__ */ u({
  __name: "ApiReference",
  props: {
    configuration: {}
  },
  setup(i) {
    const r = i, {
      availableDocuments: a,
      selectedConfiguration: s,
      selectedDocumentIndex: o,
      isIntersectionEnabled: c,
      hash: f,
      hashPrefix: l
    } = v({
      configuration: p(r, "configuration"),
      isIntersectionEnabled: n(!1),
      hash: n(""),
      hashPrefix: n("")
    });
    return d(A, { isIntersectionEnabled: c, hash: f, hashPrefix: l }), (C, t) => (_(), h(b, { configuration: e(s) }, {
      "document-selector": g(() => [
        x(e(B), {
          modelValue: e(o),
          "onUpdate:modelValue": t[0] || (t[0] = (m) => V(o) ? o.value = m : null),
          options: e(a)
        }, null, 8, ["modelValue", "options"])
      ]),
      _: 1
    }, 8, ["configuration"]));
  }
});
export {
  N as default
};
