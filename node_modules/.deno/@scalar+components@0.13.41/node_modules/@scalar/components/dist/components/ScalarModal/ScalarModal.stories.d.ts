import type { StoryObj } from '@storybook/vue3';
import { useModal } from './ScalarModal.vue.js';
/**
 * Make sure to import the useModal hook from the ScalarModal component to open/close it
 */
declare const meta: {
    component: {
        new (...args: any[]): import("vue").CreateComponentPublicInstanceWithMixins<Readonly<{
            state: ReturnType<typeof useModal>;
            title?: string;
            bodyClass?: string;
            maxWidth?: string;
            size?: "sm" | "lg" | "xs" | "md" | "xl" | "full" | "xxs" | undefined;
            variant?: "form" | "search" | "error" | undefined;
        }> & Readonly<{}>, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").PublicProps, {}, false, {}, {}, import("vue").GlobalComponents, import("vue").GlobalDirectives, string, {}, any, import("vue").ComponentProvideOptions, {
            P: {};
            B: {};
            D: {};
            C: {};
            M: {};
            Defaults: {};
        }, Readonly<{
            state: ReturnType<typeof useModal>;
            title?: string;
            bodyClass?: string;
            maxWidth?: string;
            size?: "sm" | "lg" | "xs" | "md" | "xl" | "full" | "xxs" | undefined;
            variant?: "form" | "search" | "error" | undefined;
        }> & Readonly<{}>, {}, {}, {}, {}, {}>;
        __isFragment?: never;
        __isTeleport?: never;
        __isSuspense?: never;
    } & import("vue").ComponentOptionsBase<Readonly<{
        state: ReturnType<typeof useModal>;
        title?: string;
        bodyClass?: string;
        maxWidth?: string;
        size?: "sm" | "lg" | "xs" | "md" | "xl" | "full" | "xxs" | undefined;
        variant?: "form" | "search" | "error" | undefined;
    }> & Readonly<{}>, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {}, {}, string, {}, import("vue").GlobalComponents, import("vue").GlobalDirectives, string, import("vue").ComponentProvideOptions> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
        $slots: {
            default?(_: {}): any;
            default?(_: {}): any;
        };
    });
    tags: string[];
    parameters: {
        layout: string;
    };
    argTypes: {
        size: {
            control: "select";
            options: string[];
        };
        variant: {
            control: "select";
            options: string[];
        };
    };
};
export default meta;
type Story = StoryObj<typeof meta>;
export declare const Base: Story;
export declare const Search: Story;
export declare const Scrolling: Story;
//# sourceMappingURL=ScalarModal.stories.d.ts.map