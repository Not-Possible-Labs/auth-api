import { type MiddlewareData } from '@floating-ui/vue';
import { type Slot } from 'vue';
import type { FloatingOptions } from './types';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: Readonly<{
        /** The reference element for the element in the #floating slot */
        default(): Slot;
        /** The floating element */
        floating?(props: {
            /** The width of the reference element if `resize` is true and placement is on the y axis */
            width?: string;
            /** The height of the reference element if `resize` is true and placement is on the x axis */
            height?: string;
            /** The middleware data return by Floating UI */
            data?: MiddlewareData;
        }): Slot;
    }> & {
        /** The reference element for the element in the #floating slot */
        default(): Slot;
        /** The floating element */
        floating?(props: {
            /** The width of the reference element if `resize` is true and placement is on the y axis */
            width?: string;
            /** The height of the reference element if `resize` is true and placement is on the x axis */
            height?: string;
            /** The middleware data return by Floating UI */
            data?: MiddlewareData;
        }): Slot;
    };
    refs: {
        wrapperRef: HTMLDivElement;
        floatingRef: HTMLDivElement;
    };
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import("vue").DefineComponent<FloatingOptions, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<FloatingOptions> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
//# sourceMappingURL=ScalarFloating.vue.d.ts.map