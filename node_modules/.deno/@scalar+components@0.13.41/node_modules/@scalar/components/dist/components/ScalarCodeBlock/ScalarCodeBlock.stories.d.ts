import type { StoryObj } from '@storybook/vue3';
/**
 * Syntax highlighting in a light weight component
 */
declare const meta: {
    component: import("vue").DefineComponent<{
        content: string | object;
        lang?: string;
        lineNumbers?: boolean;
        hideCredentials?: string | string[];
        copy?: boolean;
    }, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
        content: string | object;
        lang?: string;
        lineNumbers?: boolean;
        hideCredentials?: string | string[];
        copy?: boolean;
    }> & Readonly<{}>, {
        lang: string;
        lineNumbers: boolean;
        copy: boolean;
    }, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, HTMLDivElement>;
    tags: string[];
    render: (args: import("@storybook/vue3").ComponentPropsAndSlots<import("vue").DefineComponent<{
        content: string | object;
        lang?: string;
        lineNumbers?: boolean;
        hideCredentials?: string | string[];
        copy?: boolean;
    }, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
        content: string | object;
        lang?: string;
        lineNumbers?: boolean;
        hideCredentials?: string | string[];
        copy?: boolean;
    }> & Readonly<{}>, {
        lang: string;
        lineNumbers: boolean;
        copy: boolean;
    }, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, HTMLDivElement>>) => {
        components: {
            ScalarCodeBlock: import("vue").DefineComponent<{
                content: string | object;
                lang?: string;
                lineNumbers?: boolean;
                hideCredentials?: string | string[];
                copy?: boolean;
            }, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
                content: string | object;
                lang?: string;
                lineNumbers?: boolean;
                hideCredentials?: string | string[];
                copy?: boolean;
            }> & Readonly<{}>, {
                lang: string;
                lineNumbers: boolean;
                copy: boolean;
            }, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, HTMLDivElement>;
        };
        setup(this: void): {
            args: import("@storybook/vue3").ComponentPropsAndSlots<import("vue").DefineComponent<{
                content: string | object;
                lang?: string;
                lineNumbers?: boolean;
                hideCredentials?: string | string[];
                copy?: boolean;
            }, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
                content: string | object;
                lang?: string;
                lineNumbers?: boolean;
                hideCredentials?: string | string[];
                copy?: boolean;
            }> & Readonly<{}>, {
                lang: string;
                lineNumbers: boolean;
                copy: boolean;
            }, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, HTMLDivElement>>;
        };
        template: string;
    };
};
export default meta;
type Story = StoryObj<typeof meta>;
export declare const Base: Story;
export declare const LineNumbers: Story;
export declare const JSONString: Story;
export declare const HideCredentials: Story;
//# sourceMappingURL=ScalarCodeBlock.stories.d.ts.map