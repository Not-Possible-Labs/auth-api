import { defineComponent as c, openBlock as o, createBlock as r, unref as t, withCtx as l, createTextVNode as b, toDisplayString as y, createCommentVNode as m, createVNode as i, mergeProps as u, createElementBlock as p, createElementVNode as V, Fragment as g, renderList as B, normalizeStyle as _, renderSlot as k } from "vue";
import { Listbox as x, ListboxLabel as L, ListboxOptions as h, ListboxButton as $ } from "@headlessui/vue";
import { useBindCx as v } from "../../hooks/useBindCx.js";
import S from "./ScalarListboxItem.vue.js";
import C from "../ScalarFloating/ScalarFloating.vue.js";
import N from "../ScalarFloating/ScalarFloatingBackdrop.vue.js";
const w = { class: "custom-scroll min-h-0 flex-1" }, P = /* @__PURE__ */ c({
  inheritAttrs: !1,
  __name: "ScalarListbox",
  props: {
    options: {},
    id: {},
    label: {},
    multiple: { type: Boolean },
    modelValue: {},
    placement: {},
    offset: {},
    resize: { type: Boolean },
    target: {},
    middleware: {},
    teleport: { type: [Boolean, String] }
  },
  emits: ["update:modelValue"],
  setup(z) {
    const { cx: d } = v();
    return (e, s) => (o(), r(t(x), {
      modelValue: e.modelValue,
      multiple: e.multiple,
      "onUpdate:modelValue": s[0] || (s[0] = (a) => e.$emit("update:modelValue", a))
    }, {
      default: l(({ open: a }) => [
        e.label ? (o(), r(t(L), {
          key: 0,
          class: "sr-only"
        }, {
          default: l(() => [
            b(y(e.label), 1)
          ]),
          _: 1
        })) : m("", !0),
        i(t(C), u(e.$props, {
          placement: e.placement ?? "bottom-start"
        }), {
          floating: l(({ width: f }) => [
            a ? (o(), p("div", u({
              key: 0,
              style: { width: f }
            }, t(d)("relative flex max-h-[inherit] w-40 rounded text-sm")), [
              V("div", w, [
                i(t(h), { class: "flex flex-col gap-0.75 p-0.75 -outline-offset-1" }, {
                  default: l(() => [
                    (o(!0), p(g, null, B(e.options, (n) => (o(), r(S, {
                      key: n.id,
                      option: n,
                      style: _(e.multiple ? "checkbox" : "radio")
                    }, null, 8, ["option", "style"]))), 128))
                  ]),
                  _: 1
                })
              ]),
              i(t(N))
            ], 16)) : m("", !0)
          ]),
          default: l(() => [
            i(t($), {
              id: e.id,
              as: "template",
              class: "justify-start focus:outline-none focus-visible:ring-1 focus-visible:ring-c-accent"
            }, {
              default: l(() => [
                k(e.$slots, "default", { open: a })
              ]),
              _: 2
            }, 1032, ["id"])
          ]),
          _: 2
        }, 1040, ["placement"])
      ]),
      _: 3
    }, 8, ["modelValue", "multiple"]));
  }
});
export {
  P as default
};
