import type { ScalarMenuButtonProps, ScalarMenuButtonSlots, ScalarMenuSlotProps } from './types';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: Readonly<{
        /** Overrides the entire menu button */
        button?: (p: ScalarMenuButtonProps) => any;
        /** Overrides the products list */
        products?: (p: ScalarMenuSlotProps) => any;
        /** Adds items the profile section (e.g. a team picker) */
        profile?: (p: ScalarMenuSlotProps) => any;
        /** Overrides the resources section */
        sections?: (p: ScalarMenuSlotProps) => any;
    } & ScalarMenuButtonSlots> & {
        /** Overrides the entire menu button */
        button?: (p: ScalarMenuButtonProps) => any;
        /** Overrides the products list */
        products?: (p: ScalarMenuSlotProps) => any;
        /** Adds items the profile section (e.g. a team picker) */
        profile?: (p: ScalarMenuSlotProps) => any;
        /** Overrides the resources section */
        sections?: (p: ScalarMenuSlotProps) => any;
    } & ScalarMenuButtonSlots;
    refs: {};
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import("vue").DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
//# sourceMappingURL=ScalarMenu.vue.d.ts.map