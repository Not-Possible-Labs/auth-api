import { defineComponent as m, openBlock as i, createBlock as c, unref as e, withCtx as t, createVNode as r, normalizeProps as u, guardReactiveProps as d, mergeProps as _, renderSlot as s } from "vue";
import { Popover as P, PopoverPanel as v, PopoverButton as B } from "@headlessui/vue";
import { useBindCx as $ } from "../../hooks/useBindCx.js";
import g from "../ScalarFloating/ScalarFloating.vue.js";
import y from "../ScalarFloating/ScalarFloatingBackdrop.vue.js";
const b = /* @__PURE__ */ m({
  inheritAttrs: !1,
  __name: "ScalarPopover",
  props: {
    focus: { type: Boolean },
    placement: {},
    offset: {},
    resize: { type: Boolean },
    target: {},
    middleware: {},
    teleport: { type: [Boolean, String] }
  },
  setup(h) {
    const { cx: l } = $();
    return (o, k) => (i(), c(e(P), { as: "template" }, {
      default: t(({ open: a }) => [
        r(e(g), u(d(o.$props)), {
          floating: t(({ width: p, height: f }) => [
            r(e(v), _({
              focus: o.focus,
              style: { width: p, height: f }
            }, e(l)("relative flex flex-col p-0.75")), {
              default: t(({ close: n }) => [
                s(o.$slots, "popover", {
                  close: () => n(),
                  open: a
                }),
                s(o.$slots, "backdrop", { open: a }, () => [
                  r(e(y))
                ])
              ]),
              _: 2
            }, 1040, ["focus", "style"])
          ]),
          default: t(() => [
            r(e(B), { as: "template" }, {
              default: t(() => [
                s(o.$slots, "default", { open: a })
              ]),
              _: 2
            }, 1024)
          ]),
          _: 2
        }, 1040)
      ]),
      _: 3
    }));
  }
});
export {
  b as default
};
