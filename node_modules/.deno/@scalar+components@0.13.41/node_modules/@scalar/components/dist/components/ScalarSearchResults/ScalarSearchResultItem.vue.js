import { defineComponent as a, openBlock as t, createElementBlock as s, createElementVNode as o, normalizeProps as d, guardReactiveProps as m, unref as c, renderSlot as n, createBlock as p, createCommentVNode as r } from "vue";
import { useBindCx as u } from "../../hooks/useBindCx.js";
import f from "../ScalarIcon/ScalarIcon.vue.js";
const h = { class: "contents" }, v = {
  key: 0,
  class: "flex h-fit items-center text-sm font-medium text-c-3 group-hover:text-c-1"
}, x = { class: "flex min-w-0 flex-1 flex-col gap-0.75" }, _ = { class: "flex items-center gap-1" }, g = { class: "flex-1 truncate text-sm font-medium" }, k = {
  key: 0,
  class: "text-sm text-c-2"
}, y = {
  key: 0,
  class: "truncate text-sm text-c-2"
}, C = /* @__PURE__ */ a({
  inheritAttrs: !1,
  __name: "ScalarSearchResultItem",
  props: {
    icon: {},
    active: { type: Boolean }
  },
  setup($) {
    const { cx: l } = u();
    return (e, i) => (t(), s("li", h, [
      o("a", d(m(
        c(l)(
          "group flex cursor-pointer gap-2.5 rounded px-3 py-1.5 no-underline hover:bg-b-2",
          {
            "bg-b-2": e.active
          }
        )
      )), [
        e.icon ? (t(), s("div", v, [
          n(e.$slots, "icon", {}, () => [
            e.icon ? (t(), p(c(f), {
              key: 0,
              icon: e.icon,
              size: "sm"
            }, null, 8, ["icon"])) : r("", !0)
          ]),
          i[0] || (i[0] = o("span", null, "â€Š", -1))
        ])) : r("", !0),
        o("div", x, [
          o("div", _, [
            o("div", g, [
              n(e.$slots, "default")
            ]),
            e.$slots.addon ? (t(), s("div", k, [
              n(e.$slots, "addon")
            ])) : r("", !0)
          ]),
          e.$slots.description ? (t(), s("div", y, [
            n(e.$slots, "description")
          ])) : r("", !0)
        ])
      ], 16)
    ]));
  }
});
export {
  C as default
};
