import type { Component } from 'vue';
import { type Icon } from '../ScalarIcon';
/**
 * Scalar Sidebar Group toggle component
 *
 * Provides the toggle icon for a ScalarSidebarGroup
 *
 * @example
 * <ScalarSidebarGroupToggle :open="..." />
 */
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    /** Override the element tag */
    is?: Component | string;
    /** Whether or not the toggle is open */
    open?: boolean;
    /** Overrides the icon */
    icon?: Icon;
}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
    /** Override the element tag */
    is?: Component | string;
    /** Whether or not the toggle is open */
    open?: boolean;
    /** Overrides the icon */
    icon?: Icon;
}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>, Readonly<{
    /** Override the toggle icon */
    default?: (props: {
        open: boolean;
    }) => any;
    /** Override the screen reader label */
    label?: (props: {
        open: boolean;
    }) => any;
}> & {
    /** Override the toggle icon */
    default?: (props: {
        open: boolean;
    }) => any;
    /** Override the screen reader label */
    label?: (props: {
        open: boolean;
    }) => any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
//# sourceMappingURL=ScalarSidebarGroupToggle.vue.d.ts.map