import { defineComponent as o, computed as c, openBlock as t, createElementBlock as n, normalizeProps as u, guardReactiveProps as b, unref as m, Fragment as f, renderList as p, createElementVNode as v, normalizeClass as g, createCommentVNode as y } from "vue";
import { useBindCx as _ } from "../../hooks/useBindCx.js";
const h = {}, C = /* @__PURE__ */ o({
  ...h,
  inheritAttrs: !1,
  __name: "ScalarSidebarIndent",
  props: {
    indent: { default: 0 },
    selected: { type: Boolean, default: !1 }
  },
  setup(s) {
    const a = c(() => Array.from({ length: s.indent }, (e, r) => r)), { cx: d } = _();
    return (e, r) => (t(), n("div", u(b(
      m(d)("scalar-sidebar-indent flex justify-center", {
        "mr-[calc(18px-var(--scalar-sidebar-indent))]": e.indent > 0,
        "scalar-sidebar-indent-selected": e.selected
      })
    )), [
      (t(!0), n(f, null, p(a.value, (l, i) => (t(), n("div", {
        key: l,
        class: "relative w-[var(--scalar-sidebar-indent)]"
      }, [
        r[0] || (r[0] = v("div", { class: "scalar-sidebar-indent-border absolute left-1.75 inset-y-0 w-border bg-sidebar-indent-border" }, null, -1)),
        i === a.value.length - 1 ? (t(), n("div", {
          key: 0,
          class: g([
            "absolute left-1.75 inset-y-0 w-border",
            e.selected ? "bg-sidebar-indent-active" : "group-hover/button:bg-sidebar-indent-hover"
          ])
        }, null, 2)) : y("", !0)
      ]))), 128))
    ], 16));
  }
});
export {
  C as default
};
