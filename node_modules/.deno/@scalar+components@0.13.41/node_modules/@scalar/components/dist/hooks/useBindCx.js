import { useAttrs as l, computed as r } from "vue";
import { cx as e } from "../cva.js";
function d() {
  const c = l(), t = r(() => {
    const { class: s, ...a } = c;
    return { class: s || "", rest: a };
  });
  function n(...s) {
    return {
      class: e(...s, t.value.class),
      ...t.value.rest
    };
  }
  function u(...s) {
    return { class: e(...s, t.value.class) };
  }
  return {
    /**
     * Provides a wrapper around the `cx` function that merges the
     * component's class attribute with the provided classes and binds the
     * remaining attributes
     *
     * @example
     * <script setup>
     * ...
     * const { cx } = useBindCx()
     * <\/script>
     * <template>
     *   <div v-bind="cx(...)">...</div>
     * </template>
     */
    cx: n,
    /**
     * Provides a wrapper around the `cx` function that merges the
     * component's class attribute with the provided classes and but **does
     * not** bind the remaining attributes
     */
    classCx: u,
    /** The remaining attributes that are not class attributes */
    otherAttrs: r(() => t.value.rest)
  };
}
export {
  d as useBindCx
};
