export declare const node: {
    info: {
        key: string;
        title: string;
        extname: string;
        default: string;
    };
    clientsById: {
        native: {
            info: {
                key: string;
                title: string;
                link: string;
                description: string;
            };
            convert: ({ uriObj, method, allHeaders, postData }: {
                uriObj: any;
                method: any;
                allHeaders: any;
                postData: any;
            }, options?: {}) => any;
        };
        request: {
            info: {
                key: string;
                title: string;
                link: string;
                description: string;
            };
            convert: ({ method, url, queryObj, postData, headersObj, cookies }: {
                method: any;
                url: any;
                queryObj: any;
                postData: any;
                headersObj: any;
                cookies: any;
            }, options: any) => any;
        };
        unirest: {
            info: {
                key: string;
                title: string;
                link: string;
                description: string;
            };
            convert: ({ method, url, cookies, queryObj, postData, headersObj }: {
                method: any;
                url: any;
                cookies: any;
                queryObj: any;
                postData: any;
                headersObj: any;
            }, options: any) => any;
        };
        axios: {
            info: {
                key: string;
                title: string;
                link: string;
                description: string;
            };
            convert: ({ method, url, queryObj, allHeaders, postData }: {
                method: any;
                url: any;
                queryObj: any;
                allHeaders: any;
                postData: any;
            }, options: any) => any;
        };
        fetch: {
            info: {
                key: string;
                title: string;
                link: string;
                description: string;
            };
            convert: ({ method, fullUrl, postData, headersObj, cookies }: {
                method: any;
                fullUrl: any;
                postData: any;
                headersObj: any;
                cookies: any;
            }, options: any) => any;
        };
    };
};
//# sourceMappingURL=target.d.ts.map