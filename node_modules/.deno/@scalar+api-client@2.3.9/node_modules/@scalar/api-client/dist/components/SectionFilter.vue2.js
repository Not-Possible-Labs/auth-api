import { defineComponent as x, mergeModels as p, useModel as h, ref as g, openBlock as i, createElementBlock as f, withKeys as m, createElementVNode as a, Fragment as b, renderList as k, createBlock as y, withCtx as V, createTextVNode as w, toDisplayString as v, createVNode as S, unref as q, nextTick as B } from "vue";
import { ScalarIcon as C } from "@scalar/components";
import I from "./SectionFilterButton.vue.js";
const _ = { class: "request-section-content request-section-content-filter fade-request-section-content text-c-3 pointer-events-auto relative hidden w-full justify-end gap-[1.5px] rounded py-2 text-xs xl:flex" }, $ = { class: "context-bar-group-hover:text-c-1 absolute -right-[30px] top-1/2 flex -translate-y-1/2 items-center" }, F = { class: "context-bar-group-hover:hidden mr-1.5" }, K = /* @__PURE__ */ x({
  __name: "SectionFilter",
  props: /* @__PURE__ */ p({
    filters: { default: () => [] },
    filterIds: {}
  }, {
    modelValue: {},
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(l) {
    const t = h(l, "modelValue"), r = g(), c = (s) => {
      const o = s === "prev" ? -1 : 1, e = t.value ? l.filters.indexOf(t.value) : 0, n = l.filters.length, d = (e + o + n) % n;
      t.value = l.filters[d], B(() => {
        if (r.value) {
          const u = r.value.querySelector(
            'button[aria-selected="true"]'
          );
          u && u.focus();
        }
      });
    };
    return (s, o) => (i(), f("div", {
      ref_key: "tablist",
      ref: r,
      class: "filter-hover context-bar-group ml-auto hidden lg:flex",
      role: "tablist",
      onKeydown: [
        o[0] || (o[0] = m((e) => c("prev"), ["left"])),
        o[1] || (o[1] = m((e) => c("next"), ["right"]))
      ]
    }, [
      a("div", _, [
        (i(!0), f(b, null, k(s.filters, (e) => {
          var n;
          return i(), y(I, {
            key: e,
            class: "filter-hover-item",
            controls: (n = s.filterIds) == null ? void 0 : n[e],
            role: "tab",
            selected: t.value === e,
            onClick: (d) => t.value = e
          }, {
            default: V(() => [
              w(v(e), 1)
            ]),
            _: 2
          }, 1032, ["controls", "selected", "onClick"]);
        }), 128)),
        a("div", $, [
          a("span", F, v(t.value), 1),
          S(q(C), {
            icon: "FilterList",
            size: "md",
            thickness: "2"
          })
        ])
      ])
    ], 544));
  }
});
export {
  K as default
};
