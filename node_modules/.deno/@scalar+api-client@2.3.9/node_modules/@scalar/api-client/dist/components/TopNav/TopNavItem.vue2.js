import { defineComponent as d, openBlock as a, createBlock as r, unref as t, withCtx as l, createVNode as o, createElementVNode as c, normalizeClass as f, toDisplayString as u, createCommentVNode as g, createTextVNode as m } from "vue";
import { ScalarContextMenu as y, ScalarTooltip as C, ScalarIcon as n, ScalarFloating as b, ScalarDropdownMenu as v, ScalarDropdownButton as p, ScalarDropdownDivider as T } from "@scalar/components";
import { LibraryIcon as $ } from "@scalar/icons";
import k from "../ScalarHotkey.vue.js";
const w = { class: "nav-item-icon-copy flex flex-1 items-center justify-center gap-1.5" }, z = { class: "custom-scroll nav-item-copy text-xs" }, V = /* @__PURE__ */ d({
  __name: "TopNavItem",
  props: {
    hotkey: {},
    active: { type: Boolean },
    label: {},
    icon: {},
    isCollection: { type: Boolean }
  },
  emits: ["click", "close", "newTab", "copyUrl", "closeOtherTabs"],
  setup(S) {
    return (s, e) => (a(), r(t(y), { triggerClass: "overflow-hidden w-full" }, {
      trigger: l(() => [
        o(t(C), {
          class: "scalar-client",
          delay: 500,
          disableClosingTrigger: !0,
          resize: "",
          sideOffset: 4
        }, {
          trigger: l(() => [
            c("div", {
              class: f(["nav-item app-no-drag-region", { "nav-item__active": s.active }]),
              onClick: e[1] || (e[1] = (i) => s.$emit("click"))
            }, [
              c("div", w, [
                s.isCollection ? (a(), r(t($), {
                  key: 0,
                  class: "size-3.5 min-w-3.5 stroke-2",
                  src: s.icon
                }, null, 8, ["src"])) : (a(), r(t(n), {
                  key: 1,
                  icon: s.icon,
                  size: "xs",
                  thickness: "2.5"
                }, null, 8, ["icon"])),
                c("span", z, u(s.label), 1)
              ]),
              c("button", {
                class: "nav-item-close",
                type: "button",
                onClick: e[0] || (e[0] = (i) => s.$emit("close"))
              }, [
                o(t(n), {
                  icon: "Close",
                  thickness: "1.75"
                })
              ])
            ], 2)
          ]),
          content: l(() => [
            s.hotkey ? (a(), r(k, {
              key: 0,
              hotkey: s.hotkey
            }, null, 8, ["hotkey"])) : g("", !0)
          ]),
          _: 1
        })
      ]),
      content: l(() => [
        o(t(b), { placement: "right-start" }, {
          floating: l(() => [
            o(t(v), { class: "scalar-app scalar-client" }, {
              default: l(() => [
                o(t(p), {
                  class: "flex items-center gap-1.5",
                  onClick: e[2] || (e[2] = (i) => s.$emit("newTab"))
                }, {
                  default: l(() => [
                    o(t(n), {
                      icon: "AddTab",
                      size: "sm",
                      thickness: "1.5"
                    }),
                    e[6] || (e[6] = m(" New Tab ")),
                    o(k, {
                      class: "bg-b-2 ml-auto",
                      hotkey: "T"
                    })
                  ]),
                  _: 1
                }),
                o(t(p), {
                  class: "flex items-center gap-1.5",
                  onClick: e[3] || (e[3] = (i) => s.$emit("copyUrl"))
                }, {
                  default: l(() => [
                    o(t(n), {
                      icon: "Link",
                      size: "sm",
                      thickness: "1.5"
                    }),
                    e[7] || (e[7] = m(" Copy URL "))
                  ]),
                  _: 1
                }),
                o(t(T)),
                o(t(p), {
                  class: "flex items-center gap-1.5",
                  onClick: e[4] || (e[4] = (i) => s.$emit("close"))
                }, {
                  default: l(() => [
                    o(t(n), {
                      icon: "CloseTab",
                      size: "sm",
                      thickness: "1.5"
                    }),
                    e[8] || (e[8] = m(" Close Tab ")),
                    o(k, {
                      class: "bg-b-2 ml-auto",
                      hotkey: "W"
                    })
                  ]),
                  _: 1
                }),
                o(t(p), {
                  class: "flex items-center gap-1.5",
                  onClick: e[5] || (e[5] = (i) => s.$emit("closeOtherTabs"))
                }, {
                  default: l(() => [
                    o(t(n), {
                      icon: "CloseTabs",
                      size: "sm",
                      thickness: "1.5"
                    }),
                    e[9] || (e[9] = m(" Close Other Tabs "))
                  ]),
                  _: 1
                })
              ]),
              _: 1
            })
          ]),
          _: 1
        })
      ]),
      _: 1
    }));
  }
});
export {
  V as default
};
