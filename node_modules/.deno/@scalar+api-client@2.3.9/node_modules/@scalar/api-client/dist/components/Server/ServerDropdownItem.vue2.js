import { defineComponent as O, useId as U, computed as y, openBlock as c, createElementBlock as p, normalizeClass as V, createElementVNode as u, mergeProps as q, unref as a, createVNode as v, toDisplayString as M, withModifiers as E, createCommentVNode as h } from "vue";
import { ScalarListboxCheckbox as I, ScalarMarkdown as N } from "@scalar/components";
import B from "./ServerVariablesForm.vue.js";
import { useWorkspace as D } from "../../store/store.js";
const P = ["aria-expanded"], j = { class: "overflow-hidden text-ellipsis whitespace-nowrap" }, z = ["id"], L = { key: 0 }, W = { class: "description text-c-3 px-3 py-1.5" }, H = /* @__PURE__ */ O({
  __name: "ServerDropdownItem",
  props: {
    collection: {},
    operation: {},
    server: {},
    serverOption: {},
    type: {}
  },
  emits: ["update:variable"],
  setup(g, { emit: k }) {
    const e = g, x = k, f = U(), { collectionMutators: m, requestMutators: l, servers: _ } = D(), w = (t, r) => {
      var i, s, n, S;
      if (b(t) && (r == null || r.stopPropagation()), o.value) {
        (s = (i = e.operation) == null ? void 0 : i.servers) != null && s.length && l.edit(e.operation.uid, "selectedServerUid", null), e.type === "collection" ? m.edit(
          e.collection.uid,
          "selectedServerUid",
          void 0
        ) : e.type === "request" && e.operation && l.edit(e.operation.uid, "selectedServerUid", null);
        return;
      }
      e.type === "collection" && e.collection ? ((S = (n = e.operation) == null ? void 0 : n.servers) != null && S.length && l.edit(e.operation.uid, "selectedServerUid", null), m.edit(
        e.collection.uid,
        "selectedServerUid",
        t
      )) : e.type === "request" && e.operation && l.edit(e.operation.uid, "selectedServerUid", t);
    }, o = y(() => e.type === "collection" ? e.collection.selectedServerUid === e.serverOption.id : e.type === "request" && e.operation ? e.operation.selectedServerUid === e.serverOption.id : !1), b = (t) => {
      if (!t)
        return !1;
      const r = _[t];
      return Object.keys((r == null ? void 0 : r.variables) ?? {}).length > 0;
    }, d = y(
      () => {
        var t;
        return o.value && b(((t = e.server) == null ? void 0 : t.uid) ?? "");
      }
    ), C = (t, r) => {
      x("update:variable", t, r);
    };
    return (t, r) => {
      var i, s;
      return c(), p("div", {
        class: V(["group/item flex min-h-fit flex-col rounded border", { "border-transparent": !o.value }])
      }, [
        u("button", q(d.value ? { "aria-controls": a(f) } : {}, {
          "aria-expanded": d.value,
          class: ["flex min-h-8 cursor-pointer items-center gap-1.5 rounded px-1.5", o.value ? "text-c-1 bg-b-2" : "hover:bg-b-2"],
          type: "button",
          onClick: r[0] || (r[0] = (n) => w(t.serverOption.id, n))
        }), [
          v(a(I), { selected: o.value }, null, 8, ["selected"]),
          u("span", j, M(t.serverOption.label), 1)
        ], 16, P),
        d.value ? (c(), p("div", {
          key: 0,
          id: a(f),
          class: "bg-b-2 divide divide-y rounded-b border-t *:pl-4",
          onClick: r[1] || (r[1] = E(() => {
          }, ["stop"]))
        }, [
          v(B, {
            variables: (i = t.server) == null ? void 0 : i.variables,
            "onUpdate:variable": C
          }, null, 8, ["variables"]),
          (s = t.server) != null && s.description ? (c(), p("div", L, [
            u("div", W, [
              v(a(N), {
                value: t.server.description
              }, null, 8, ["value"])
            ])
          ])) : h("", !0)
        ], 8, z)) : h("", !0)
      ], 2);
    };
  }
});
export {
  H as default
};
