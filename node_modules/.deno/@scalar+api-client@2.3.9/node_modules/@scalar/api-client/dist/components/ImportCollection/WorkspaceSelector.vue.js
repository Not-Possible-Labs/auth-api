import { defineComponent as W, ref as D, openBlock as m, createElementBlock as w, Fragment as k, createElementVNode as s, createVNode as a, unref as e, withCtx as r, renderList as z, createBlock as N, withModifiers as v, normalizeClass as M, toDisplayString as h, withDirectives as B, vModelText as V, createTextVNode as j } from "vue";
import { useModal as E, ScalarDropdown as T, ScalarDropdownItem as _, ScalarIcon as u, ScalarDropdownDivider as $, ScalarButton as b, ScalarModal as A } from "@scalar/components";
import { useToasts as I } from "@scalar/use-toasts";
import { useRouter as F } from "vue-router";
import { useActiveEntities as L } from "../../store/active-entities.js";
import { useWorkspace as P } from "../../store/store.js";
const R = { class: "flex w-[inherit] items-center text-sm" }, U = { class: "m-0 flex items-center gap-1 text-sm font-medium" }, q = { class: "line-clamp-1 w-[calc(100%-10px)] text-left text-xs" }, G = { class: "overflow-hidden text-ellipsis" }, H = { class: "flex h-4 w-4 items-center justify-center" }, ee = /* @__PURE__ */ W({
  __name: "WorkspaceSelector",
  setup(J) {
    const { activeWorkspace: i } = L(), { workspaces: g, workspaceMutators: C } = P(), { push: f } = F(), c = E(), { toast: x } = I(), l = D(""), y = (n) => {
      var t;
      n !== ((t = i.value) == null ? void 0 : t.uid) && f({
        name: "workspace",
        params: {
          workspace: n
        }
      });
    }, S = () => {
      if (!l.value.trim()) {
        x("Please enter a name before creating a workspace.", "error");
        return;
      }
      const n = C.add({
        name: l.value
      });
      x(`Created new workspace '${n.name}'`), f({
        name: "workspace",
        params: {
          workspace: n.uid
        }
      }), l.value = "", c.hide();
    };
    return (n, t) => (m(), w(k, null, [
      s("div", R, [
        a(e(T), null, {
          items: r(() => [
            (m(!0), w(k, null, z(e(g), (o, p) => (m(), N(e(_), {
              key: p,
              class: "group/item flex w-full items-center gap-1.5 overflow-hidden text-ellipsis whitespace-nowrap",
              onClick: v((d) => y(p), ["stop"])
            }, {
              default: r(() => {
                var d;
                return [
                  s("div", {
                    class: M([
                      "flex h-4 w-4 items-center justify-center rounded-full p-[3px]",
                      ((d = e(i)) == null ? void 0 : d.uid) === p ? "bg-c-accent text-b-1" : "shadow-border text-transparent"
                    ])
                  }, [
                    a(e(u), {
                      class: "size-2.5",
                      icon: "Checkmark",
                      thickness: "3"
                    })
                  ], 2),
                  s("span", G, h(o.name), 1)
                ];
              }),
              _: 2
            }, 1032, ["onClick"]))), 128)),
            a(e($)),
            a(e(_), {
              class: "flex items-center gap-1.5",
              onClick: t[0] || (t[0] = (o) => e(c).show())
            }, {
              default: r(() => [
                s("div", H, [
                  a(e(u), {
                    icon: "Add",
                    size: "sm"
                  })
                ]),
                t[2] || (t[2] = s("span", null, "New Workspace", -1))
              ]),
              _: 1
            })
          ]),
          default: r(() => [
            a(e(b), {
              class: "text-c-1 hover:bg-b-2 text-c-3 line-clamp-1 h-full w-fit justify-start px-1.5 py-1 font-normal",
              fullWidth: "",
              variant: "ghost"
            }, {
              default: r(() => {
                var o;
                return [
                  s("div", U, [
                    s("h2", q, h((o = e(i)) == null ? void 0 : o.name), 1),
                    a(e(u), {
                      icon: "ChevronDown",
                      size: "md"
                    })
                  ])
                ];
              }),
              _: 1
            })
          ]),
          _: 1
        })
      ]),
      a(e(A), {
        bodyClass: "m-0 p-1 rounded-lg border-t-0",
        class: "z-overlay absolute",
        size: "xxs",
        state: e(c),
        variant: "form"
      }, {
        default: r(() => [
          s("form", {
            class: "flex gap-1",
            onSubmit: v(S, ["prevent"])
          }, [
            B(s("input", {
              "onUpdate:modelValue": t[1] || (t[1] = (o) => l.value = o),
              class: "min-h-8 w-full flex-1 border-none p-1.5 text-sm outline-none",
              placeholder: "New Workspace",
              type: "text"
            }, null, 512), [
              [V, l.value]
            ]),
            a(e(b), {
              class: "max-h-8 p-0 px-3 text-xs",
              disabled: !l.value.trim(),
              type: "submit"
            }, {
              default: r(() => t[3] || (t[3] = [
                j(" Continue ")
              ])),
              _: 1
            }, 8, ["disabled"])
          ], 32)
        ]),
        _: 1
      }, 8, ["state"])
    ], 64));
  }
});
export {
  ee as default
};
