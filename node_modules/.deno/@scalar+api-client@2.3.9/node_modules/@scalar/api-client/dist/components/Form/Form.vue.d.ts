import type { Cookie } from '@scalar/oas-utils/entities/cookie';
import type { Path, PathValue } from '@scalar/object-utils/nested';
type __VLS_Props = {
    title?: string;
    options: {
        key: string;
        label: string;
        placeholder: string;
    }[];
    data: Record<string, any>;
    onUpdate: <P extends Path<Cookie>>(key: P, value: NonNullable<PathValue<Cookie, P>>) => void;
};
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        title?(_: {}): any;
    };
    refs: {};
    rootEl: HTMLElement;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import("vue").DefineComponent<__VLS_Props, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<__VLS_Props> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, HTMLElement>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
//# sourceMappingURL=Form.vue.d.ts.map