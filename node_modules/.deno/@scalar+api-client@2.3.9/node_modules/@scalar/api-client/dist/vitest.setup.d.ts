import { useLayout } from './hooks/useLayout';
import { useSidebar } from './hooks/useSidebar';
import { type Mock } from 'vitest';
export declare const mockUseLayout: Mock<[], ReturnType<typeof useLayout>>;
export declare const mockUseSidebar: Mock<[], ReturnType<typeof useSidebar>>;
/** Spy on console.warn */
export declare const consoleWarnSpy: import("vitest").MockInstance<[message?: any, ...optionalParams: any[]], void>;
/** Spy on console.error */
export declare const consoleErrorSpy: import("vitest").MockInstance<[message?: any, ...optionalParams: any[]], void>;
/** Reset the spies */
export declare const resetConsoleSpies: () => void;
/** Helper to re-enable console warn checks */
export declare const enableConsoleWarn: () => boolean;
/** Helper to disable console warn checks */
export declare const disableConsoleWarn: () => boolean;
/** Helper to enable console error checks */
export declare const enableConsoleError: () => boolean;
/** Helper to disable console error checks */
export declare const disableConsoleError: () => boolean;
//# sourceMappingURL=vitest.setup.d.ts.map