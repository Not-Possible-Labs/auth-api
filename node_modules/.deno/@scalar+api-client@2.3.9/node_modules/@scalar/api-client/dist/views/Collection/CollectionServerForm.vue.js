import { defineComponent as _, computed as u, watch as h, openBlock as o, createElementBlock as c, Fragment as k, createVNode as x, createBlock as y, createCommentVNode as n } from "vue";
import { REGEX as U } from "@scalar/oas-utils/helpers";
import E from "../../components/Form/Form.vue.js";
import S from "../../components/Server/ServerVariablesForm.vue.js";
import { useActiveEntities as g } from "../../store/active-entities.js";
import { useWorkspace as B } from "../../store/store.js";
const C = { class: "bg-b-1 divide-0.5 flex w-full flex-col divide-y text-sm" }, W = /* @__PURE__ */ _({
  __name: "CollectionServerForm",
  props: {
    collectionId: { default: "" },
    serverUid: { default: "" }
  },
  setup(v) {
    const l = v, { activeWorkspaceCollections: s } = g(), { servers: d, serverMutators: i } = B(), p = [
      {
        label: "URL",
        key: "url",
        placeholder: "https://void.scalar.com",
        type: "text"
      },
      {
        label: "Description",
        key: "description",
        placeholder: "Production",
        type: "text"
      }
    ], t = u(() => {
      const e = s.value.find(
        (r) => r.uid === l.collectionId
      );
      return d[e && typeof l.serverUid == "string" && l.serverUid === "default" ? e.servers[0] ?? "" : (e == null ? void 0 : e.servers.find((r) => r === l.serverUid)) ?? ""];
    }), f = u(() => {
      var e, r;
      return (e = t.value) != null && e.url ? ((r = t.value.url.match(U.PATH)) == null ? void 0 : r.map((a) => a.slice(1, -1))) ?? [] : [];
    });
    h(
      f,
      (e) => {
        if (!t.value)
          return;
        const r = t.value.variables ? { ...t.value.variables } : {};
        Object.keys(r).forEach((a) => {
          e.includes(a) || delete r[a];
        }), e.forEach((a) => {
          r[a] || (r[a] = { default: "" });
        }), i.edit(t.value.uid, "variables", r);
      },
      { immediate: !0 }
    );
    const m = (e, r) => {
      !s.value || !t.value || i.edit(t.value.uid, e, r);
    }, b = (e, r) => {
      if (!t.value)
        return;
      const a = t.value.variables || {};
      a[e] = { ...a[e], default: r }, i.edit(t.value.uid, "variables", a);
    };
    return (e, r) => (o(), c("div", C, [
      t.value ? (o(), c(k, { key: 0 }, [
        x(E, {
          data: t.value,
          onUpdate: m,
          options: p
        }, null, 8, ["data"]),
        t.value.variables ? (o(), y(S, {
          key: 0,
          variables: t.value.variables,
          "onUpdate:variable": b
        }, null, 8, ["variables"])) : n("", !0)
      ], 64)) : n("", !0)
    ]));
  }
});
export {
  W as default
};
