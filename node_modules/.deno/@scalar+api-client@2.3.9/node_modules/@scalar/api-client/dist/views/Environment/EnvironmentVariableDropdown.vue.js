import { defineComponent as R, ref as m, computed as h, onMounted as I, openBlock as r, createBlock as v, unref as l, withCtx as y, createElementVNode as c, normalizeStyle as x, createElementBlock as u, Fragment as P, renderList as T, normalizeClass as j, createTextVNode as b, toDisplayString as k, createVNode as q, createCommentVNode as g } from "vue";
import { ScalarTeleport as D, ScalarIcon as V, ScalarButton as F } from "@scalar/components";
import { onClickOutside as K } from "@vueuse/core";
import O from "fuse.js";
import { useRouter as G } from "vue-router";
import { getEnvColor as L } from "../../libs/env-helpers.js";
import { parseEnvVariables as _ } from "../../libs/environment-parser.js";
const M = {
  key: 0,
  class: "gap-1/2 flex flex-col"
}, Q = ["onClick"], $ = { class: "flex items-center gap-1.5 whitespace-nowrap" }, H = { class: "w-20 overflow-hidden text-ellipsis whitespace-nowrap text-right" }, ne = /* @__PURE__ */ R({
  __name: "EnvironmentVariableDropdown",
  props: {
    query: {},
    environment: {},
    envVariables: {},
    dropdownPosition: {}
  },
  emits: ["select"],
  setup(C, { expose: S, emit: E }) {
    const s = C, z = E, d = m(!0), p = m(null), n = m(0), f = G(), A = () => {
      if (!f)
        return;
      const { currentRoute: t, push: o } = f, e = t.value.params.workspace;
      o({
        name: "environment.default",
        params: {
          workspace: e
        }
      }), d.value = !1;
    }, B = new O(_(s.envVariables), {
      keys: ["key", "value"]
    }), i = h(() => {
      const t = s.query;
      if (!t)
        return _(s.envVariables).slice(-4).filter(({ key: e, value: a }) => e !== "" || a !== "");
      const o = B.search(t, { limit: 10 });
      return o.length > 0 ? o.map((e) => e.item).filter(({ key: e, value: a }) => e !== "" || a !== "") : [];
    }), w = (t) => {
      z("select", t);
    };
    S({
      handleArrowKey: (t) => {
        const o = t === "up" ? -1 : 1, e = i.value.length;
        e !== 0 && (n.value = (n.value + o + e) % e);
      },
      handleSelect: () => {
        if (n.value >= 0) {
          const t = i.value[n.value];
          t && w(t.key);
        }
      }
    }), I(() => {
      n.value = 0;
    });
    const N = h(() => {
      var t, o;
      return {
        left: (((t = s.dropdownPosition) == null ? void 0 : t.left) ?? 0) + "px",
        // Add a 5px offset from the editor
        top: (((o = s.dropdownPosition) == null ? void 0 : o.top) ?? 0) + 5 + "px"
      };
    });
    return K(
      p,
      () => {
        d.value = !1;
      },
      { ignore: [p] }
    ), (t, o) => d.value ? (r(), v(l(D), {
      key: 0,
      class: "scalar-client"
    }, {
      default: y(() => [
        c("div", {
          ref_key: "dropdownRef",
          ref: p,
          class: "p-0.75 custom-scroll fixed left-0 top-0 flex max-h-[60svh] w-56 flex-col rounded border",
          style: x(N.value)
        }, [
          i.value.length ? (r(), u("ul", M, [
            (r(!0), u(P, null, T(i.value, (e, a) => (r(), u("li", {
              key: e.key,
              class: j(["font-code text-xxs hover:bg-b-2 flex h-8 cursor-pointer items-center justify-between gap-1.5 rounded p-1.5 transition-colors duration-150", { "bg-b-2": a === n.value }]),
              onClick: (W) => w(e.key)
            }, [
              c("div", $, [
                e.source === "collection" ? (r(), u("span", {
                  key: 0,
                  class: "h-2.5 w-2.5 min-w-2.5 rounded-full",
                  style: x({
                    backgroundColor: l(L)(t.environment)
                  })
                }, null, 4)) : (r(), v(l(V), {
                  key: 1,
                  class: "w-2.5",
                  icon: "Globe"
                })),
                b(" " + k(e.key), 1)
              ]),
              c("span", H, k(e.value), 1)
            ], 10, Q))), 128))
          ])) : l(f) ? (r(), v(l(F), {
            key: 1,
            class: "font-code text-xxs hover:bg-b-2 flex h-8 w-full justify-start gap-2 px-1.5 transition-colors duration-150",
            variant: "secondary",
            onClick: A
          }, {
            default: y(() => [
              q(l(V), {
                icon: "Add",
                size: "sm"
              }),
              o[0] || (o[0] = b(" Add Variable "))
            ]),
            _: 1
          })) : g("", !0),
          o[1] || (o[1] = c("div", { class: "-z-1 bg-b-1 brightness-lifted absolute inset-0 rounded shadow-lg" }, null, -1))
        ], 4)
      ]),
      _: 1
    })) : g("", !0);
  }
});
export {
  ne as default
};
