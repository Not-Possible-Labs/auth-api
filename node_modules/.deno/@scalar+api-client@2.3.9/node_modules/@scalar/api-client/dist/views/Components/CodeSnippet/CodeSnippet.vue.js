import { defineComponent as u, computed as n, openBlock as l, createElementBlock as c, toDisplayString as s, createBlock as d, unref as p, createCommentVNode as m } from "vue";
import { ScalarCodeBlock as f } from "@scalar/components";
import { isDefined as y } from "@scalar/oas-utils/helpers";
import { getSnippet as v } from "./helpers/get-snippet.js";
const g = {
  key: 0,
  class: "text-c-3 flex min-h-16 items-center justify-center px-4 text-sm"
}, B = /* @__PURE__ */ u({
  __name: "CodeSnippet",
  props: {
    target: {},
    client: {},
    operation: {},
    server: {},
    example: {},
    securitySchemes: { default: () => [] }
  },
  setup(t) {
    const i = n(
      () => t.securitySchemes.flatMap((e) => e.type === "apiKey" ? e.value : (e == null ? void 0 : e.type) === "http" ? [
        e.token,
        e.password,
        btoa(`${e.username}:${e.password}`)
      ] : e.type === "oauth2" ? Object.values(e.flows).map((r) => r == null ? void 0 : r.token).filter(y) : [])
    ), a = n(() => {
      const [e, r] = v(t.target, t.client, {
        operation: t.operation,
        example: t.example,
        server: t.server,
        securitySchemes: t.securitySchemes
      });
      return { error: e, payload: r };
    }), o = n(() => t.target === "shell" && t.client === "curl" ? "curl" : t.target ?? "plaintext");
    return (e, r) => a.value.error ? (l(), c("div", g, s(a.value.error.message), 1)) : a.value.payload ? (l(), d(p(f), {
      key: 1,
      class: "w-full",
      content: a.value.payload,
      hideCredentials: i.value,
      lang: o.value,
      lineNumbers: ""
    }, null, 8, ["content", "hideCredentials", "lang"])) : m("", !0);
  }
});
export {
  B as default
};
