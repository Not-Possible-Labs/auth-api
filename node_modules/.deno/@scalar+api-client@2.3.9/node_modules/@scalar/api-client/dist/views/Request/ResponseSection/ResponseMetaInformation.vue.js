import { defineComponent as I, ref as d, computed as _, openBlock as o, createElementBlock as r, toDisplayString as n, unref as f, Fragment as v, createElementVNode as a, createTextVNode as p, createCommentVNode as y, createBlock as b, withCtx as w, normalizeStyle as k } from "vue";
import { httpStatusCodes as B } from "@scalar/oas-utils/helpers";
import N from "pretty-bytes";
import h from "pretty-ms";
import L from "../../../components/HelpfulLink.vue.js";
import { useWorkspace as V } from "../../../store/store.js";
const x = { class: "text-c-1 flex gap-1.5" }, z = { key: 0 }, D = { key: 0 }, E = { key: 1 }, $ = /* @__PURE__ */ I({
  __name: "ResponseMetaInformation",
  props: {
    response: {}
  },
  setup(g) {
    const C = g, { events: S } = V(), l = d(), u = d(0);
    S.requestStatus.on((e) => {
      e === "start" ? l.value = setInterval(() => u.value += 1e3, 1e3) : (clearInterval(l.value), l.value = void 0, u.value = 0);
    });
    const i = (e) => {
      var c, m;
      const t = Number.parseInt(
        ((c = e.headers) == null ? void 0 : c["Content-Length"]) || ((m = e.headers) == null ? void 0 : m["content-length"]) || "0",
        10
      );
      return t ? N(t) : void 0;
    }, s = _(() => {
      const e = C.response.status;
      if (e)
        return B[e] ?? void 0;
    });
    return (e, t) => (o(), r("div", x, [
      l.value && u.value ? (o(), r("span", z, n(f(h)(u.value)), 1)) : (o(), r(v, { key: 1 }, [
        a("span", null, [
          t[0] || (t[0] = a("span", { class: "sr-only" }, "Response Information, Duration:", -1)),
          p(" " + n(f(h)(e.response.duration)), 1)
        ]),
        i(e.response) ? (o(), r("span", D, [
          t[1] || (t[1] = a("span", { class: "sr-only" }, ", Size:", -1)),
          p(" " + n(i(e.response)), 1)
        ])) : y("", !0),
        s.value ? (o(), r(v, { key: 1 }, [
          t[2] || (t[2] = a("span", { class: "sr-only" }, ", Status:", -1)),
          s.value.url ? (o(), b(L, {
            key: 0,
            class: "flex items-center gap-1.5",
            href: s.value.url
          }, {
            default: w(() => [
              p(n(e.response.status) + " " + n(s.value.name) + " ", 1),
              a("span", {
                class: "block h-1.5 w-1.5 rounded-full",
                style: k({ backgroundColor: s.value.color })
              }, null, 4)
            ]),
            _: 1
          }, 8, ["href"])) : (o(), r("span", E, [
            p(n(e.response.status) + " " + n(s.value.name) + " ", 1),
            a("span", {
              class: "block h-1.5 w-1.5 rounded-full",
              style: k({ backgroundColor: s.value.color })
            }, null, 4)
          ]))
        ], 64)) : y("", !0)
      ], 64))
    ]));
  }
});
export {
  $ as default
};
