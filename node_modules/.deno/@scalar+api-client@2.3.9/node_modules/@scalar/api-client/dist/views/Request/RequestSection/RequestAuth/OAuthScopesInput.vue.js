import { defineComponent as C, computed as x, openBlock as f, createBlock as w, unref as t, withCtx as a, createElementVNode as i, createVNode as n, normalizeClass as b, toDisplayString as m, createElementBlock as v, Fragment as y, renderList as k, createTextVNode as V, createCommentVNode as D } from "vue";
import { Disclosure as $, DisclosureButton as B, DisclosurePanel as N } from "@headlessui/vue";
import { ScalarIcon as O } from "@scalar/components";
import S from "../../../../components/DataTable/DataTableCell.vue.js";
import T from "../../../../components/DataTable/DataTableRow.vue.js";
import j from "../../../../components/DataTable/DataTableCheckbox.vue.js";
const z = { class: "flex h-fit w-full" }, E = { class: "flex-1" }, F = {
  class: "grid auto-rows-auto",
  style: { gridTemplateColumns: "1fr auto" }
}, I = { key: 0 }, R = { class: "font-code text-xs" }, H = /* @__PURE__ */ C({
  __name: "OAuthScopesInput",
  props: {
    flow: {},
    updateScheme: { type: Function }
  },
  setup(o) {
    const g = x(
      () => {
        var e;
        return Object.entries(((e = o.flow) == null ? void 0 : e.scopes) ?? {}).map(([l, s]) => ({
          id: l,
          label: l,
          description: s
        }));
      }
    ), u = x(() => {
      var e;
      return ((e = o.flow) == null ? void 0 : e.selectedScopes) || [];
    });
    function _(e, l) {
      l ? o.updateScheme(`flows.${o.flow.type}.selectedScopes`, [
        ...u.value,
        e
      ]) : o.updateScheme(
        `flows.${o.flow.type}.selectedScopes`,
        u.value.filter((s) => s !== e)
      );
    }
    return (e, l) => (f(), w(t(S), { class: "h-auto !max-h-[initial] min-h-8 items-center" }, {
      default: a(() => [
        i("div", z, [
          l[0] || (l[0] = i("div", { class: "text-c-1 h-full items-center" }, null, -1)),
          n(t($), {
            as: "div",
            class: "bl flex w-full flex-col"
          }, {
            default: a(() => {
              var s, h;
              return [
                n(t(B), {
                  class: b([
                    "group/scopes-accordion hover:text-c-1 pr-2.25 flex h-auto min-h-8 cursor-pointer items-center gap-1.5 pl-3 text-left",
                    (((h = (s = e.flow) == null ? void 0 : s.selectedScopes) == null ? void 0 : h.length) || 0) > 0 ? "text-c-1" : "text-c-3"
                  ])
                }, {
                  default: a(({ open: c }) => {
                    var d, r, p;
                    return [
                      i("div", E, " Scopes Selected " + m(((r = (d = e.flow) == null ? void 0 : d.selectedScopes) == null ? void 0 : r.length) || 0) + " / " + m(Object.keys(((p = e.flow) == null ? void 0 : p.scopes) ?? {}).length || 0), 1),
                      n(t(O), {
                        class: "text-c-3 group-hover/scopes-accordion:text-c-2",
                        icon: c ? "ChevronDown" : "ChevronRight",
                        size: "md"
                      }, null, 8, ["icon"])
                    ];
                  }),
                  _: 1
                }, 8, ["class"]),
                n(t(N), { as: "template" }, {
                  default: a(() => [
                    i("table", F, [
                      (f(!0), v(y, null, k(g.value, ({ id: c, label: d, description: r }) => (f(), w(t(T), {
                        key: c,
                        class: "text-c-2",
                        onClick: (p) => _(c, !u.value.includes(c))
                      }, {
                        default: a(() => [
                          n(t(S), { class: "hover:text-c-1 box-border !max-h-[initial] w-full cursor-pointer px-3 py-1.5" }, {
                            default: a(() => [
                              r ? (f(), v("div", I, [
                                i("span", R, m(d), 1),
                                V(" â€“ " + m(r), 1)
                              ])) : D("", !0)
                            ]),
                            _: 2
                          }, 1024),
                          n(t(j), {
                            modelValue: u.value.includes(c),
                            "onUpdate:modelValue": () => {
                            }
                          }, null, 8, ["modelValue"])
                        ]),
                        _: 2
                      }, 1032, ["onClick"]))), 128))
                    ])
                  ]),
                  _: 1
                })
              ];
            }),
            _: 1
          })
        ])
      ]),
      _: 1
    }));
  }
});
export {
  H as default
};
