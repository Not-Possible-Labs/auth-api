import { defineComponent as u, openBlock as c, createBlock as l, withCtx as v, unref as e, createCommentVNode as d } from "vue";
import f from "../../components/ViewLayout/ViewLayoutSection.vue.js";
import { useActiveEntities as _ } from "../../store/active-entities.js";
import k from "./components/MarkdownInput.vue.js";
import { useWorkspace as V } from "../../store/store.js";
const M = /* @__PURE__ */ u({
  __name: "CollectionOverview",
  setup(C) {
    const {
      activeCollection: o,
      activeEnvironment: t,
      activeEnvVariables: s,
      activeWorkspace: n
    } = _(), { collectionMutators: m } = V(), p = (i) => {
      o.value && m.edit(o.value.uid, "info.description", i);
    };
    return (i, w) => (c(), l(f, null, {
      default: v(() => {
        var r, a;
        return [
          e(t) && e(n) ? (c(), l(k, {
            key: 0,
            envVariables: e(s),
            environment: e(t),
            modelValue: ((a = (r = e(o)) == null ? void 0 : r.info) == null ? void 0 : a.description) ?? "",
            workspace: e(n),
            "onUpdate:modelValue": p
          }, null, 8, ["envVariables", "environment", "modelValue", "workspace"])) : d("", !0)
        ];
      }),
      _: 1
    }));
  }
});
export {
  M as default
};
