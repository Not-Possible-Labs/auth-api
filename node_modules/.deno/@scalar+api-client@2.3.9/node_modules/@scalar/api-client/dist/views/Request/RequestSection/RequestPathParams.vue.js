import { defineComponent as w, computed as $, watch as b, openBlock as d, createBlock as h, withCtx as f, createTextVNode as x, toDisplayString as K, createCommentVNode as R } from "vue";
import { REGEX as V } from "@scalar/oas-utils/helpers";
import C from "../../../components/ViewLayout/ViewLayoutCollapse.vue.js";
import q from "./RequestTable.vue.js";
import { useWorkspace as E } from "../../../store/store.js";
const A = /* @__PURE__ */ w({
  __name: "RequestPathParams",
  props: {
    example: {},
    operation: {},
    paramKey: {},
    title: {},
    environment: {},
    envVariables: {},
    workspace: {},
    invalidParams: {}
  },
  setup(a) {
    const { requestMutators: p, requestExampleMutators: u } = E(), s = $(
      () => a.example.parameters[a.paramKey].map((e) => ({
        ...e,
        enum: e.enum
      }))
    ), v = (e, r, n) => {
      var m, t;
      const i = a.example.parameters[a.paramKey], o = (m = i[e]) == null ? void 0 : m.key;
      if (o) {
        if (r === "key") {
          if ((t = i[e]) != null && t.required)
            return;
          if (n) {
            const l = encodeURIComponent(o), c = encodeURIComponent(n), g = new RegExp(`(?<=/):${l}(?=[/?#]|$)`, "g"), k = a.operation.path.replace(g, `:${c}`);
            p.edit(a.operation.uid, "path", k);
          } else {
            i.splice(e, 1);
            const l = new RegExp(`/:${encodeURIComponent(o)}(?=[/?#]|$)`, "g"), c = a.operation.path.replace(l, "");
            p.edit(a.operation.uid, "path", c);
          }
        }
        u.edit(
          a.example.uid,
          `parameters.${a.paramKey}.${e}.${r}`,
          n
        );
      }
    }, y = (e) => {
      var m;
      const r = ((m = e.match(V.PATH)) == null ? void 0 : m.map((t) => t.slice(1, -1))) || [], n = a.example.parameters[a.paramKey], i = new Map(n.map((t) => [t.key, t])), o = r.map(
        (t) => i.get(t) || { key: t, value: "", enabled: !0 }
      );
      n.forEach((t) => {
        !r.includes(t.key) && (t.value || t.required) && o.push(t);
      }), n.splice(0, n.length, ...o), u.edit(a.example.uid, `parameters.${a.paramKey}`, n);
    }, P = (e) => {
      e && y(e);
    };
    return b(
      () => a.operation.path,
      (e) => {
        e && P(e);
      }
    ), (e, r) => (d(), h(C, {
      itemCount: s.value.length
    }, {
      title: f(() => [
        x(K(e.title), 1)
      ]),
      default: f(() => [
        s.value.length ? (d(), h(q, {
          key: 0,
          class: "flex-1",
          columns: ["32px", "", ""],
          envVariables: e.envVariables,
          environment: e.environment,
          invalidParams: e.invalidParams,
          items: s.value,
          workspace: e.workspace,
          onUpdateRow: v
        }, null, 8, ["envVariables", "environment", "invalidParams", "items", "workspace"])) : R("", !0)
      ]),
      _: 1
    }, 8, ["itemCount"]));
  }
});
export {
  A as default
};
