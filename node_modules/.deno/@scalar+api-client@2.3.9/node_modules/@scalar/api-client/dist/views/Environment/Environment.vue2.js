import { defineComponent as ie, ref as h, watch as ue, onMounted as me, onBeforeUnmount as ce, openBlock as v, createBlock as g, withCtx as c, createVNode as m, createElementVNode as p, unref as r, createElementBlock as V, Fragment as A, renderList as B, normalizeClass as L, createTextVNode as K, toDisplayString as F, withDirectives as de, withModifiers as ve, createCommentVNode as G, vShow as fe, createSlots as pe } from "vue";
import { useModal as O, ScalarIcon as J, ScalarButton as xe, ScalarModal as be } from "@scalar/components";
import { LibraryIcon as he } from "@scalar/icons";
import { useToasts as Ce } from "@scalar/use-toasts";
import { useRouter as Ee, useRoute as ke } from "vue-router";
import ye from "../../components/CodeInput/CodeInput.vue.js";
import ge from "../../components/Sidebar/Actions/EditSidebarListElement.vue.js";
import _e from "../../components/Sidebar/Sidebar.vue.js";
import we from "../../components/Sidebar/SidebarButton.vue.js";
import Ie from "../../components/Sidebar/SidebarList.vue.js";
import T from "../../components/Sidebar/SidebarListElement.vue.js";
import Me from "../../components/ViewLayout/ViewLayout.vue.js";
import Se from "../../components/ViewLayout/ViewLayoutContent.vue.js";
import $e from "../../components/ViewLayout/ViewLayoutSection.vue.js";
import { useSidebar as Ve } from "../../hooks/useSidebar.js";
import { PathId as i } from "../../routes.js";
import { useActiveEntities as Oe } from "../../store/active-entities.js";
import je from "./EnvironmentColorModal.vue.js";
import Ne from "./EnvironmentModal.vue.js";
import { useWorkspace as Re } from "../../store/store.js";
const De = { class: "flex-1" }, Ue = ["onClick"], We = { class: "flex h-5 max-w-[14px] items-center justify-center" }, ln = /* @__PURE__ */ ie({
  __name: "Environment",
  setup(ze) {
    const C = Ee(), E = ke(), {
      activeWorkspace: x,
      activeEnvironment: j,
      activeWorkspaceCollections: u,
      activeEnvVariables: H
    } = Oe(), { events: N, workspaceMutators: P, collectionMutators: k } = Re(), { collapsedSidebarFolders: y, toggleSidebarFolder: _ } = Ve(), w = O(), I = O(), M = O(), R = h(null), s = h("default"), D = h(""), b = h(void 0), d = h(void 0), S = h(void 0), { toast: U } = Ce(), q = (e) => JSON.parse(e);
    function W(e, o, n) {
      var t;
      e && (o.uid === n ? U(
        `Environment name already used in ${(t = o.info) == null ? void 0 : t.title}`,
        "error"
      ) : U("Environment name already used in another collection", "error"));
    }
    function Q(e) {
      u.value.some(
        (n) => {
          const t = Object.keys(
            n["x-scalar-environments"] || {}
          ).includes(e.name);
          return W(t, n, e.collectionId), t;
        }
      ) || (e.collectionId && (k.addEnvironment(
        e.name,
        {
          variables: {},
          color: e.color
        },
        e.collectionId
      ), y[e.collectionId] || _(e.collectionId), C.push({
        name: "environment.collection",
        params: {
          [i.Collection]: e.collectionId,
          [i.Environment]: e.name
        }
      })), I.hide());
    }
    function X(e) {
      var o, n;
      if (j) {
        const t = q(e);
        if (s.value === "default")
          P.edit(
            (o = x.value) == null ? void 0 : o.uid,
            "environments",
            t
          );
        else {
          const a = u.value.find(
            (l) => {
              var f;
              return (f = l["x-scalar-environments"]) == null ? void 0 : f[s.value ?? ""];
            }
          );
          if ((n = a == null ? void 0 : a["x-scalar-environments"]) != null && n[s.value ?? ""]) {
            const l = a["x-scalar-environments"][s.value ?? ""];
            l && (l.variables = t, k.edit(
              a.uid,
              "x-scalar-environments",
              a["x-scalar-environments"]
            ));
          }
        }
      }
    }
    const $ = (e) => {
      b.value = e, I.show();
    }, Y = (e, o) => {
      d.value = e, b.value = o, S.value = e, M.show();
    }, Z = (e) => {
      var o, n, t;
      R.value = e, D.value = ((t = (n = (o = u.value.find(
        (a) => {
          var l;
          return (l = a["x-scalar-environments"]) == null ? void 0 : l[e];
        }
      )) == null ? void 0 : o["x-scalar-environments"]) == null ? void 0 : n[e]) == null ? void 0 : t.color) ?? "", w.show();
    }, ee = (e) => {
      const o = R.value;
      typeof o == "string" && (u.value.some(
        (t) => {
          var a;
          return (a = t["x-scalar-environments"]) == null ? void 0 : a[o];
        }
      ) && u.value.forEach((t) => {
        var a;
        (a = t["x-scalar-environments"]) != null && a[o] && (t["x-scalar-environments"][o].color = e, k.edit(
          t.uid,
          "x-scalar-environments",
          t["x-scalar-environments"]
        ));
      }), w.hide());
    };
    function ne(e) {
      u.value.forEach((n) => {
        k.removeEnvironment(e, n.uid);
      });
      const o = u.value.flatMap(
        (n) => Object.keys(n["x-scalar-environments"] || {})
      );
      if (o.length > 0) {
        const n = o[o.length - 1];
        if (!n)
          return;
        const t = u.value.find(
          (a) => Object.keys(a["x-scalar-environments"] || {}).includes(
            n
          )
        );
        s.value = n, C.push({
          name: "environment.collection",
          params: {
            collectionId: t == null ? void 0 : t.uid,
            environmentId: n
          }
        }), t && !y[t.uid] && _(t.uid);
      } else
        s.value = "default", C.push({
          name: "environment",
          params: { environment: "default" }
        });
    }
    const te = () => s.value === "default" ? "Global Environment" : s.value, oe = () => {
      var e, o, n, t;
      return s.value === "default" ? JSON.stringify((e = x.value) == null ? void 0 : e.environments, null, 2) : JSON.stringify(
        (t = (n = (o = u.value.find(
          (a) => {
            var l;
            return (l = a["x-scalar-environments"]) == null ? void 0 : l[s.value ?? ""];
          }
        )) == null ? void 0 : o["x-scalar-environments"]) == null ? void 0 : n[s.value ?? ""]) == null ? void 0 : t.variables,
        null,
        2
      );
    }, ae = (e) => y[e], z = (e) => {
      e != null && e.createNew && E.name === "environment" && $();
    };
    ue(
      () => [E.params[i.Collection], E.params[i.Environment]],
      ([e, o]) => {
        e ? s.value = o : s.value = "default";
      }
    ), me(() => {
      s.value = E.params[i.Environment] || "default", N.hotKeys.on(z);
      const e = E.params[i.Collection];
      e && !y[e] && _(e);
    }), ce(() => N.hotKeys.off(z));
    const le = (e, o, n) => {
      var a, l;
      const t = n ? {
        name: "environment.collection",
        params: {
          [i.Workspace]: (a = x.value) == null ? void 0 : a.uid,
          [i.Collection]: n,
          [i.Environment]: o
        }
      } : {
        name: "environment.default",
        params: {
          [i.Workspace]: (l = x.value) == null ? void 0 : l.uid,
          [i.Environment]: o
        }
      };
      e.metaKey ? window.open(C.resolve(t).href, "_blank") : C.push(t);
    };
    function re() {
      d.value = void 0, b.value = void 0, S.value = void 0, M.hide();
    }
    function se(e) {
      u.value.some(
        (n) => {
          const t = Object.keys(
            n["x-scalar-environments"] || {}
          ).includes(e);
          return W(
            t,
            n,
            b.value
          ), t;
        }
      ) || (e && d.value !== "default" && u.value.forEach((n) => {
        var t;
        if ((t = n["x-scalar-environments"]) != null && t[d.value ?? ""]) {
          const a = n["x-scalar-environments"][d.value ?? ""];
          a && (delete n["x-scalar-environments"][d.value ?? ""], n["x-scalar-environments"][e] = a, k.edit(
            n.uid,
            "x-scalar-environments",
            n["x-scalar-environments"]
          ));
        }
      }), e && s.value === d.value && (s.value = e), d.value = void 0, b.value = void 0, S.value = void 0, M.hide());
    }
    return (e, o) => (v(), g(Me, null, {
      default: c(() => [
        m(_e, { title: "Collections" }, {
          content: c(() => [
            p("div", De, [
              m(Ie, null, {
                default: c(() => [
                  (v(), g(T, {
                    key: "default",
                    class: "text-xs",
                    isCopyable: !1,
                    to: {
                      name: "environment.default",
                      params: {
                        [r(i).Environment]: "default"
                      }
                    },
                    type: "environment",
                    variable: {
                      name: "Global Environment",
                      uid: "default",
                      icon: "Globe",
                      isDefault: !0
                    }
                  }, null, 8, ["to"])),
                  (v(!0), V(A, null, B(r(u), (n) => {
                    var t;
                    return v(), V("li", {
                      key: n.uid,
                      class: "gap-1/2 flex flex-col"
                    }, [
                      p("button", {
                        class: "hover:bg-b-2 group flex w-full items-center gap-1.5 break-words rounded p-1.5 text-left text-sm font-medium",
                        type: "button",
                        onClick: (a) => r(_)(n.uid)
                      }, [
                        p("span", We, [
                          m(r(he), {
                            class: "text-sidebar-c-2 size-3.5 min-w-3.5 stroke-2 group-hover:hidden",
                            src: n["x-scalar-icon"] || "interface-content-folder"
                          }, null, 8, ["src"]),
                          p("div", {
                            class: L({
                              "rotate-90": r(y)[n.uid]
                            })
                          }, [
                            m(r(J), {
                              class: "text-c-3 hover:text-c-1 hidden text-sm group-hover:block",
                              icon: "ChevronRight",
                              size: "md"
                            })
                          ], 2)
                        ]),
                        K(" " + F(((t = n.info) == null ? void 0 : t.title) ?? ""), 1)
                      ], 8, Ue),
                      de(p("div", {
                        class: L({
                          "before:bg-border before:z-1 relative mb-[.5px] before:pointer-events-none before:absolute before:left-3 before:top-0 before:h-[calc(100%_+_.5px)] before:w-[.5px] last:mb-0 last:before:h-full": Object.keys(n["x-scalar-environments"] || {}).length > 0
                        })
                      }, [
                        (v(!0), V(A, null, B(n["x-scalar-environments"], (a, l) => (v(), g(T, {
                          key: l,
                          class: "text-xs [&>a]:pl-5",
                          collectionId: n.uid,
                          isCopyable: !1,
                          isDeletable: !0,
                          isRenameable: !0,
                          to: {
                            name: "collection.environment",
                            params: {
                              [r(i).Collection]: n.uid,
                              [r(i).Environment]: l
                            }
                          },
                          type: "environment",
                          variable: {
                            name: l,
                            uid: l,
                            color: a.color ?? "#8E8E8E",
                            isDefault: !1
                          },
                          warningMessage: "Are you sure you want to delete this environment?",
                          onClick: ve((f) => le(f, l, n.uid), ["prevent"]),
                          onColorModal: (f) => Z(l),
                          onDelete: (f) => ne(l),
                          onRename: (f) => Y(l, n.uid)
                        }, null, 8, ["collectionId", "to", "variable", "onClick", "onColorModal", "onDelete", "onRename"]))), 128)),
                        Object.keys(n["x-scalar-environments"] || {}).length === 0 ? (v(), g(r(xe), {
                          key: 0,
                          class: "text-c-1 hover:bg-b-2 flex h-8 w-full justify-start gap-1.5 py-0 pl-6 text-xs",
                          variant: "ghost",
                          onClick: (a) => $(n.uid)
                        }, {
                          default: c(() => [
                            m(r(J), {
                              icon: "Add",
                              size: "sm"
                            }),
                            o[2] || (o[2] = p("span", null, "Add Environment", -1))
                          ]),
                          _: 2
                        }, 1032, ["onClick"])) : G("", !0)
                      ], 2), [
                        [fe, ae(n.uid)]
                      ])
                    ]);
                  }), 128))
                ]),
                _: 1
              })
            ])
          ]),
          button: c(() => [
            m(we, {
              click: $,
              hotkey: "N"
            }, {
              title: c(() => o[3] || (o[3] = [
                K(" Add Environment ")
              ])),
              _: 1
            })
          ]),
          _: 1
        }),
        m(Se, { class: "flex-1" }, {
          default: c(() => [
            m($e, null, pe({
              default: c(() => [
                s.value && r(x) ? (v(), g(ye, {
                  key: 0,
                  class: "py-2 pl-px pr-2 md:px-4",
                  envVariables: r(H),
                  environment: r(j),
                  isCopyable: "",
                  language: "json",
                  lineNumbers: "",
                  lint: "",
                  modelValue: oe(),
                  workspace: r(x),
                  "onUpdate:modelValue": X
                }, null, 8, ["envVariables", "environment", "modelValue", "workspace"])) : G("", !0)
              ]),
              _: 2
            }, [
              s.value ? {
                name: "title",
                fn: c(() => [
                  p("span", null, F(te()), 1)
                ]),
                key: "0"
              } : void 0
            ]), 1024)
          ]),
          _: 1
        }),
        m(je, {
          selectedColor: D.value,
          state: r(w),
          onCancel: o[0] || (o[0] = (n) => r(w).hide()),
          onSubmit: ee
        }, null, 8, ["selectedColor", "state"]),
        m(Ne, {
          activeWorkspaceCollections: r(u),
          collectionId: b.value,
          state: r(I),
          onCancel: o[1] || (o[1] = (n) => r(I).hide()),
          onSubmit: Q
        }, null, 8, ["activeWorkspaceCollections", "collectionId", "state"]),
        m(r(be), {
          size: "xxs",
          state: r(M),
          title: `Edit ${d.value}`
        }, {
          default: c(() => [
            m(ge, {
              name: S.value ?? "",
              onClose: re,
              onEdit: se
            }, null, 8, ["name"])
          ]),
          _: 1
        }, 8, ["state", "title"])
      ]),
      _: 1
    }));
  }
});
export {
  ln as default
};
