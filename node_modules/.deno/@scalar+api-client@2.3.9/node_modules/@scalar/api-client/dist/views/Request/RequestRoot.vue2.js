import { defineComponent as j, ref as m, computed as L, onMounted as M, onBeforeUnmount as $, watch as H, openBlock as f, createElementBlock as Q, normalizeClass as _, unref as o, createBlock as w, isRef as F, createCommentVNode as O, createElementVNode as V, createVNode as G } from "vue";
import { isDefined as K } from "@scalar/oas-utils/helpers";
import { safeJSON as X } from "@scalar/object-utils/parse";
import { useToasts as Y } from "@scalar/use-toasts";
import { RouterView as Z } from "vue-router";
import ee from "../../components/Sidebar/SidebarToggle.vue.js";
import { useSidebar as te } from "../../hooks/useSidebar.js";
import { validateParameters as oe } from "../../libs/validate-parameters.js";
import { useActiveEntities as re } from "../../store/active-entities.js";
import { useOpenApiWatcher as se } from "./hooks/useOpenApiWatcher.js";
import ae from "./RequestSidebar.vue.js";
import { createRequestOperation as le } from "../../libs/send-request/create-request-operation.js";
import { ERRORS as ne } from "../../libs/errors.js";
import { useWorkspace as ie } from "../../store/store.js";
import { useLayout as ue } from "../../hooks/useLayout.js";
const ce = { class: "flex h-full" }, me = { class: "flex h-full flex-1 flex-col" }, Oe = /* @__PURE__ */ j({
  __name: "RequestRoot",
  emits: ["newTab"],
  setup(fe) {
    const U = ie(), { toast: d } = Y(), { layout: n } = ue(), {
      activeCollection: i,
      activeExample: a,
      activeEnvironment: v,
      activeRequest: u,
      activeWorkspace: p,
      activeServer: C
    } = re(), { cookies: T, requestHistory: g, showSidebar: S, securitySchemes: A, events: l } = U, { isSidebarOpen: r } = te(), B = m(), R = m(), c = m(/* @__PURE__ */ new Set()), D = L(
      () => {
        var e, t;
        return (n === "modal" ? (e = i.value) == null ? void 0 : e.selectedSecuritySchemeUids : (t = u.value) == null ? void 0 : t.selectedSecuritySchemeUids) ?? [];
      }
    ), x = async () => {
      var h, k, E, N;
      if (!u.value || !a.value || !i.value)
        return;
      c.value = oe(a.value);
      const e = typeof v.value == "object" ? v.value.value : "{}", t = X.parse(e);
      t.error && console.error("INVALID ENVIRONMENT!");
      const s = t.error || typeof t.data != "object" ? {} : t.data ?? {}, z = ((h = p.value) == null ? void 0 : h.cookies.map((W) => T[W]).filter(K)) ?? [], I = ((E = (k = i.value) == null ? void 0 : k.info) == null ? void 0 : E.title) === "Drafts" ? void 0 : C.value, [y, b] = le({
        request: u.value,
        example: a.value,
        selectedSecuritySchemeUids: D.value,
        proxyUrl: ((N = p.value) == null ? void 0 : N.proxyUrl) ?? "",
        environment: s,
        globalCookies: z,
        status: l.requestStatus,
        securitySchemes: A,
        server: I
      });
      if (y) {
        d(y.message, "error");
        return;
      }
      R.value = b.controller;
      const [q, J] = await b.sendRequest();
      q ? d(q.message, "error") : g.push(JSON.parse(JSON.stringify(J)));
    }, P = async () => {
      var e;
      return (e = R.value) == null ? void 0 : e.abort(ne.REQUEST_ABORTED);
    };
    return M(() => {
      l.executeRequest.on(x), l.cancelRequest.on(P);
    }), se(), $(() => l.executeRequest.off(x)), H(
      () => {
        var e;
        return (e = a.value) == null ? void 0 : e.parameters;
      },
      () => {
        c.value.clear();
      },
      { deep: !0 }
    ), (e, t) => (f(), Q("div", {
      ref_key: "element",
      ref: B,
      class: _(["bg-b-1 relative z-0 flex h-full flex-1 flex-col overflow-hidden pt-0", {
        "!mb-0 !mr-0 !border-0": o(n) === "modal"
      }])
    }, [
      o(S) ? (f(), w(ee, {
        key: 0,
        modelValue: o(r),
        "onUpdate:modelValue": t[0] || (t[0] = (s) => F(r) ? r.value = s : null),
        class: _(["absolute left-3 top-2 z-50", [
          { hidden: o(r) },
          { "xl:!flex": !o(r) },
          { "!flex": o(n) === "modal" }
        ]])
      }, null, 8, ["modelValue", "class"])) : O("", !0),
      V("div", ce, [
        o(S) ? (f(), w(ae, {
          key: 0,
          onNewTab: t[1] || (t[1] = (s) => e.$emit("newTab", s))
        })) : O("", !0),
        V("div", me, [
          G(o(Z), { invalidParams: c.value }, null, 8, ["invalidParams"])
        ])
      ])
    ], 2));
  }
});
export {
  Oe as default
};
