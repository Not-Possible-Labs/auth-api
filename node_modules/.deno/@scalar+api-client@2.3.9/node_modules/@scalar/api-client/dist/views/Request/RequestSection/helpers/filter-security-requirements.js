import { isDefined as f } from "@scalar/oas-utils/helpers";
const c = (s, m = [], n = {}) => {
  const a = new Set(
    s.map((e) => Object.keys(e).sort().join(","))
  );
  return m.reduce((e, r) => {
    const o = Array.isArray(r) ? r : [r], p = o.map((t) => {
      var i;
      return (i = n[t]) == null ? void 0 : i.nameKey;
    }).sort().join(",");
    return a.has(p) && e.push(...o.map((t) => n[t]).filter(f)), e;
  }, []);
};
export {
  c as filterSecurityRequirements
};
