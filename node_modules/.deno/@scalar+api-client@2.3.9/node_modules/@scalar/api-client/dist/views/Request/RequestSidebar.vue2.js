import { defineComponent as ge, useId as Se, reactive as ke, ref as Re, watch as H, onMounted as ye, onBeforeUnmount as xe, computed as D, openBlock as l, createElementBlock as k, Fragment as $, withDirectives as K, createVNode as p, unref as t, normalizeClass as h, createSlots as we, withCtx as d, createElementVNode as n, createBlock as u, createCommentVNode as b, toDisplayString as B, isRef as Ie, withKeys as q, withModifiers as g, vShow as U, renderList as G, createTextVNode as M, nextTick as Ce } from "vue";
import { ScalarIcon as P, ScalarSearchInput as De, ScalarSearchResultList as $e, ScalarSearchResultItem as qe, ScalarButton as Me } from "@scalar/components";
import { LibraryIcon as Pe } from "@scalar/icons";
import { useToasts as Te } from "@scalar/use-toasts";
import { useRouter as _e } from "vue-router";
import Ve from "../../assets/rabbit.ascii.js";
import Ee from "../../assets/rabbitjump.ascii.js";
import Le from "../../components/EnvironmentSelector/EnvironmentSelector.vue.js";
import Ne from "../../components/HttpMethod/HttpMethod.vue.js";
import j from "../../components/ScalarAsciiArt.vue.js";
import { useSearch as Oe } from "../../components/Search/useSearch.js";
import ze from "../../components/Sidebar/SidebarButton.vue.js";
import { useLayout as Fe } from "../../hooks/useLayout.js";
import { useSidebar as We } from "../../hooks/useSidebar.js";
import { PathId as J } from "../../routes.js";
import { useActiveEntities as Ae } from "../../store/active-entities.js";
import { createInitialRequest as He } from "../../store/requests.js";
import { dragHandlerFactory as Ke } from "./handle-drag.js";
import Be from "./RequestSidebarItemMenu.vue.js";
import { isGettingStarted as Ue } from "./RequestSection/helpers/getting-started.js";
import Ge from "./RequestSidebarItem.vue.js";
import je from "../../components/Sidebar/Sidebar.vue.js";
import Je from "./components/WorkspaceDropdown.vue.js";
import { useWorkspace as Qe } from "../../store/store.js";
const Xe = { class: "bg-b-1 sticky top-0 z-20 flex h-12 items-center px-3" }, Ye = {
  key: 1,
  class: "text-c-3"
}, Ze = ["aria-pressed"], et = { class: "sr-only" }, tt = {
  class: "search-button-fade sticky top-12 z-10 px-3 py-2.5 pt-0 focus-within:z-20",
  role: "search"
}, ot = {
  key: 1,
  class: "contents"
}, st = { class: "empty-sidebar-item-content px-2.5 py-2.5" }, at = { class: "rabbit-ascii relative m-auto mt-2 h-[68px] w-[60px]" }, Mt = /* @__PURE__ */ ge({
  __name: "RequestSidebar",
  emits: ["newTab", "clearDrafts"],
  setup(rt, { emit: Q }) {
    const X = Q, {
      collapsedSidebarFolders: Y,
      isSidebarOpen: T,
      setCollapsedSidebarFolder: Z,
      toggleSidebarOpen: ee
    } = We(), { layout: i } = Fe(), _ = Qe(), {
      activeCollection: V,
      activeWorkspaceCollections: c,
      activeRequest: te,
      activeWorkspaceRequests: E,
      activeWorkspace: oe
    } = Ae(), { findRequestParents: se, events: R, requestMutators: L, requests: y } = _, { handleDragEnd: ae, isDroppable: re } = Ke(
      oe,
      _
    ), { replace: N } = _e(), le = () => {
      R.commandPalette.emit({
        commandName: "Import from OpenAPI/Swagger/Postman/cURL"
      });
    }, O = Se(), { toast: ne } = Te(), S = ke({ open: !1 }), m = Re(!1);
    H(
      te,
      (s) => {
        s && se(s).forEach(
          (e) => Z(e, !0)
        );
      },
      { immediate: !0 }
    );
    const {
      searchText: v,
      searchResultsWithPlaceholderResults: x,
      selectedSearchResult: w,
      onSearchResultClick: ie,
      fuseSearch: ue,
      searchInputRef: I,
      searchResultRefs: ce,
      navigateSearchResults: z,
      selectSearchResult: de
    } = Oe(), F = (s) => {
      var e;
      s && (s.toggleSidebar && ee(), s.focusRequestSearch && ((e = I.value) == null || e.focus()));
    };
    ye(() => R.hotKeys.on(F)), xe(() => {
      R.hotKeys.off(F);
    });
    const me = (s) => {
      if (s != null && s.documentUrl) {
        s.watchMode = !s.watchMode;
        const e = c.value.find(
          (o) => o.uid === s.entity.uid
        );
        e && (e.watchMode = s.watchMode);
      }
    };
    H(
      () => c.value.map(
        (s) => s.watchMode
      ),
      (s, e) => {
        s.forEach((o, a) => {
          var r, f, W;
          if (i !== "modal" && o !== e[a] && ((f = (r = c.value[a]) == null ? void 0 : r.info) == null ? void 0 : f.title) !== "Drafts" && c.value[a]) {
            const A = c.value[a];
            if (!A)
              return;
            const be = `${(W = A.info) == null ? void 0 : W.title}: Watch Mode ${o ? "enabled" : "disabled"}`;
            ne(be, "info");
          }
        });
      }
    );
    const fe = D(() => {
      var f;
      const s = x.value;
      if (!s.length)
        return "No results found";
      const e = (f = s[w.value]) == null ? void 0 : f.item;
      if (!e)
        return "No result selected";
      const o = v.value.length ? `${s.length} result${s.length === 1 ? "" : "s"} found, ` : "", a = `, HTTP Method ${e.httpVerb}, Path ${e.path}`, r = `${e.title} ${a}`;
      return `${o}Selected: ${r}`;
    }), pe = () => {
      const s = c.value.find(
        (o) => {
          var a;
          return ((a = o.info) == null ? void 0 : a.title) === "Drafts";
        }
      );
      if (s && s.requests.forEach((o) => {
        y[o] && L.delete(y[o], s.uid);
      }), E.value.length) {
        const o = c.value[0], a = o == null ? void 0 : o.requests[0];
        a && N({
          name: "request",
          params: {
            [J.Request]: a
          }
        });
      } else {
        const { request: o } = He();
        s && (L.add(o, s.uid), N({
          name: "request",
          params: {
            [J.Request]: o.uid
          }
        }));
      }
    }, ve = () => {
      m.value = !m.value, m.value || (v.value = ""), m.value && Ce(() => {
        var s;
        return (s = I.value) == null ? void 0 : s.focus();
      });
    }, C = D(
      () => Ue(
        c.value,
        E.value,
        y
      )
    ), he = D(() => i === "modal" && V.value ? [V.value] : c.value);
    return (s, e) => (l(), k($, null, [
      K(p(t(je), {
        class: h([t(T) ? "sidebar-active-width" : ""])
      }, we({
        content: d(() => [
          n("div", Xe, [
            n("div", {
              class: h(["size-8", { "xl:hidden": t(i) !== "modal" }])
            }, null, 2),
            t(i) !== "modal" ? (l(), u(t(Je), { key: 0 })) : b("", !0),
            t(i) !== "modal" ? (l(), k("span", Ye, " / ")) : b("", !0),
            t(i) !== "modal" ? (l(), u(Le, { key: 2 })) : b("", !0),
            n("button", {
              "aria-pressed": m.value,
              class: "ml-auto",
              type: "button",
              onClick: ve
            }, [
              n("span", et, B(m.value ? "Hide" : "Show") + " search ", 1),
              p(t(P), {
                class: "text-c-3 hover:bg-b-2 p-1.75 max-h-8 max-w-8 rounded-lg text-sm",
                icon: "Search"
              })
            ], 8, Ze)
          ]),
          K(n("div", tt, [
            p(t(De), {
              ref_key: "searchInputRef",
              ref: I,
              modelValue: t(v),
              "onUpdate:modelValue": e[0] || (e[0] = (o) => Ie(v) ? v.value = o : null),
              "aria-controls": t(O),
              label: fe.value,
              sidebar: "",
              onInput: t(ue),
              onKeydown: [
                e[1] || (e[1] = q(g((o) => t(z)("down"), ["stop"]), ["down"])),
                e[2] || (e[2] = q(g((o) => t(de)(), ["stop"]), ["enter"])),
                e[3] || (e[3] = q(g((o) => t(z)("up"), ["stop"]), ["up"]))
              ]
            }, null, 8, ["modelValue", "aria-controls", "label", "onInput"])
          ], 512), [
            [U, m.value]
          ]),
          n("div", {
            class: h(["gap-1/2 flex flex-1 flex-col overflow-visible overflow-y-auto px-3 pb-3 pt-0", [
              {
                "pb-14": t(i) !== "modal"
              },
              {
                "h-[calc(100%-273.5px)]": C.value
              }
            ]]),
            onDragenter: e[6] || (e[6] = g(() => {
            }, ["prevent"])),
            onDragover: e[7] || (e[7] = g(() => {
            }, ["prevent"]))
          }, [
            t(v) ? (l(), u(t($e), {
              key: 0,
              id: t(O),
              "aria-label": "Search Results",
              class: "gap-px",
              noResults: !t(x).length
            }, {
              default: d(() => [
                (l(!0), k($, null, G(t(x), (o, a) => (l(), u(t(qe), {
                  id: `#search-input-${o.item.id}`,
                  key: o.refIndex,
                  ref_for: !0,
                  ref: (r) => t(ce)[a] = r,
                  active: t(w) === a,
                  class: "px-2",
                  href: o.item.link,
                  onClick: g((r) => t(ie)(o), ["prevent"]),
                  onFocus: (r) => w.value = a
                }, {
                  addon: d(() => [
                    e[9] || (e[9] = n("span", { class: "sr-only" }, "HTTP Method:", -1)),
                    p(Ne, {
                      class: "font-bold",
                      method: o.item.httpVerb ?? "get"
                    }, null, 8, ["method"])
                  ]),
                  default: d(() => [
                    M(B(o.item.title) + " ", 1)
                  ]),
                  _: 2
                }, 1032, ["id", "active", "href", "onClick", "onFocus"]))), 128))
              ]),
              _: 1
            }, 8, ["id", "noResults"])) : (l(), k("nav", ot, [
              (l(!0), k($, null, G(he.value, (o) => {
                var a;
                return l(), u(Ge, {
                  key: o.uid,
                  isDraggable: t(i) !== "modal" && ((a = o.info) == null ? void 0 : a.title) !== "Drafts",
                  isDroppable: t(re),
                  menuItem: S,
                  parentUids: [],
                  uid: o.uid,
                  onNewTab: e[4] || (e[4] = (r, f) => X("newTab", { name: r, uid: f })),
                  onOnDragEnd: t(ae),
                  onOpenMenu: e[5] || (e[5] = (r) => Object.assign(S, r))
                }, {
                  leftIcon: d(() => {
                    var r;
                    return [
                      ((r = o.info) == null ? void 0 : r.title) === "Drafts" ? (l(), u(t(P), {
                        key: 0,
                        class: "text-sidebar-c-2 group-hover:hidden",
                        icon: "Scribble",
                        thickness: "2.25"
                      })) : (l(), u(t(Pe), {
                        key: 1,
                        class: "text-sidebar-c-2 size-3.5 min-w-3.5 stroke-2 group-hover:hidden",
                        src: o["x-scalar-icon"] || "interface-content-folder"
                      }, null, 8, ["src"])),
                      n("div", {
                        class: h({
                          "rotate-90": t(Y)[o.uid]
                        })
                      }, [
                        p(t(P), {
                          class: "text-c-3 hover:text-c-1 hidden text-sm group-hover:block",
                          icon: "ChevronRight",
                          size: "md"
                        })
                      ], 2)
                    ];
                  }),
                  _: 2
                }, 1032, ["isDraggable", "isDroppable", "menuItem", "uid", "onOnDragEnd"]);
              }), 128))
            ]))
          ], 34)
        ]),
        button: d(() => [
          n("div", {
            class: h({
              "empty-sidebar-item": C.value
            })
          }, [
            n("div", st, [
              n("div", at, [
                p(j, {
                  art: t(Ve),
                  class: "rabbitsit font-bold"
                }, null, 8, ["art"]),
                p(j, {
                  art: t(Ee),
                  class: "rabbitjump absolute left-0 top-0 font-bold"
                }, null, 8, ["art"])
              ]),
              e[10] || (e[10] = n("div", { class: "mb-2 mt-2 text-balance text-center text-sm" }, [
                n("b", { class: "font-medium" }, "Let's Get Started"),
                n("p", { class: "mt-2" }, " Create request, folder, collection or import from OpenAPI/Postman ")
              ], -1))
            ]),
            t(i) !== "modal" ? (l(), u(t(Me), {
              key: 0,
              class: h(["mb-1.5 hidden h-fit w-full p-1.5 opacity-0", {
                "flex opacity-100": C.value
              }]),
              onClick: le
            }, {
              default: d(() => e[11] || (e[11] = [
                M(" Import Collection ")
              ])),
              _: 1
            }, 8, ["class"])) : b("", !0),
            t(i) !== "modal" ? (l(), u(ze, {
              key: 1,
              click: t(R).commandPalette.emit,
              hotkey: "K"
            }, {
              title: d(() => e[12] || (e[12] = [
                M(" Add Item ")
              ])),
              _: 1
            }, 8, ["click"])) : b("", !0)
          ], 2)
        ]),
        _: 2
      }, [
        t(i) !== "modal" ? {
          name: "header",
          fn: d(() => []),
          key: "0"
        } : void 0
      ]), 1032, ["class"]), [
        [U, t(T)]
      ]),
      t(i) !== "modal" && S ? (l(), u(Be, {
        key: 0,
        menuItem: S,
        onClearDrafts: pe,
        onCloseMenu: e[8] || (e[8] = (o) => S.open = !1),
        onToggleWatchMode: me
      }, null, 8, ["menuItem"])) : b("", !0)
    ], 64));
  }
});
export {
  Mt as default
};
